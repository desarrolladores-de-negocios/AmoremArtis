#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Amorem_Artis
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="AmoremArtis")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertAlumno(Alumno instance);
    partial void UpdateAlumno(Alumno instance);
    partial void DeleteAlumno(Alumno instance);
    partial void InsertCategoria(Categoria instance);
    partial void UpdateCategoria(Categoria instance);
    partial void DeleteCategoria(Categoria instance);
    partial void InsertDetalleAlumno(DetalleAlumno instance);
    partial void UpdateDetalleAlumno(DetalleAlumno instance);
    partial void DeleteDetalleAlumno(DetalleAlumno instance);
    partial void InsertInstrumento(Instrumento instance);
    partial void UpdateInstrumento(Instrumento instance);
    partial void DeleteInstrumento(Instrumento instance);
    partial void InsertPadre(Padre instance);
    partial void UpdatePadre(Padre instance);
    partial void DeletePadre(Padre instance);
    partial void InsertSeccionInstrumento(SeccionInstrumento instance);
    partial void UpdateSeccionInstrumento(SeccionInstrumento instance);
    partial void DeleteSeccionInstrumento(SeccionInstrumento instance);
    partial void InsertSolfeo(Solfeo instance);
    partial void UpdateSolfeo(Solfeo instance);
    partial void DeleteSolfeo(Solfeo instance);
    partial void InsertSolfeoAlumno(SolfeoAlumno instance);
    partial void UpdateSolfeoAlumno(SolfeoAlumno instance);
    partial void DeleteSolfeoAlumno(SolfeoAlumno instance);
    partial void InsertTipoAlumno(TipoAlumno instance);
    partial void UpdateTipoAlumno(TipoAlumno instance);
    partial void DeleteTipoAlumno(TipoAlumno instance);
    partial void InsertApellido(Apellido instance);
    partial void UpdateApellido(Apellido instance);
    partial void DeleteApellido(Apellido instance);
    partial void InsertEstados(Estados instance);
    partial void UpdateEstados(Estados instance);
    partial void DeleteEstados(Estados instance);
    partial void InsertNombre(Nombre instance);
    partial void UpdateNombre(Nombre instance);
    partial void DeleteNombre(Nombre instance);
    partial void InsertTelefono(Telefono instance);
    partial void UpdateTelefono(Telefono instance);
    partial void DeleteTelefono(Telefono instance);
    partial void InsertMatricula(Matricula instance);
    partial void UpdateMatricula(Matricula instance);
    partial void DeleteMatricula(Matricula instance);
    partial void InsertMensualidad(Mensualidad instance);
    partial void UpdateMensualidad(Mensualidad instance);
    partial void DeleteMensualidad(Mensualidad instance);
    partial void InsertDetalleMaestro(DetalleMaestro instance);
    partial void UpdateDetalleMaestro(DetalleMaestro instance);
    partial void DeleteDetalleMaestro(DetalleMaestro instance);
    partial void InsertMaestro(Maestro instance);
    partial void UpdateMaestro(Maestro instance);
    partial void DeleteMaestro(Maestro instance);
    partial void InsertHorasTrabajadasDia(HorasTrabajadasDia instance);
    partial void UpdateHorasTrabajadasDia(HorasTrabajadasDia instance);
    partial void DeleteHorasTrabajadasDia(HorasTrabajadasDia instance);
    partial void InsertPagoMensualMaestro(PagoMensualMaestro instance);
    partial void UpdatePagoMensualMaestro(PagoMensualMaestro instance);
    partial void DeletePagoMensualMaestro(PagoMensualMaestro instance);
    partial void InsertSolfeoMaestro(SolfeoMaestro instance);
    partial void UpdateSolfeoMaestro(SolfeoMaestro instance);
    partial void DeleteSolfeoMaestro(SolfeoMaestro instance);
    partial void InsertCargo(Cargo instance);
    partial void UpdateCargo(Cargo instance);
    partial void DeleteCargo(Cargo instance);
    partial void InsertUsuario(Usuario instance);
    partial void UpdateUsuario(Usuario instance);
    partial void DeleteUsuario(Usuario instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::Amorem_Artis.Properties.Settings.Default.AmoremArtisConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Alumno> Alumno
		{
			get
			{
				return this.GetTable<Alumno>();
			}
		}
		
		public System.Data.Linq.Table<Categoria> Categoria
		{
			get
			{
				return this.GetTable<Categoria>();
			}
		}
		
		public System.Data.Linq.Table<DetalleAlumno> DetalleAlumno
		{
			get
			{
				return this.GetTable<DetalleAlumno>();
			}
		}
		
		public System.Data.Linq.Table<Instrumento> Instrumento
		{
			get
			{
				return this.GetTable<Instrumento>();
			}
		}
		
		public System.Data.Linq.Table<Padre> Padre
		{
			get
			{
				return this.GetTable<Padre>();
			}
		}
		
		public System.Data.Linq.Table<SeccionInstrumento> SeccionInstrumento
		{
			get
			{
				return this.GetTable<SeccionInstrumento>();
			}
		}
		
		public System.Data.Linq.Table<Solfeo> Solfeo
		{
			get
			{
				return this.GetTable<Solfeo>();
			}
		}
		
		public System.Data.Linq.Table<SolfeoAlumno> SolfeoAlumno
		{
			get
			{
				return this.GetTable<SolfeoAlumno>();
			}
		}
		
		public System.Data.Linq.Table<TipoAlumno> TipoAlumno
		{
			get
			{
				return this.GetTable<TipoAlumno>();
			}
		}
		
		public System.Data.Linq.Table<Apellido> Apellido
		{
			get
			{
				return this.GetTable<Apellido>();
			}
		}
		
		public System.Data.Linq.Table<Estados> Estados
		{
			get
			{
				return this.GetTable<Estados>();
			}
		}
		
		public System.Data.Linq.Table<Nombre> Nombre
		{
			get
			{
				return this.GetTable<Nombre>();
			}
		}
		
		public System.Data.Linq.Table<Telefono> Telefono
		{
			get
			{
				return this.GetTable<Telefono>();
			}
		}
		
		public System.Data.Linq.Table<Matricula> Matricula
		{
			get
			{
				return this.GetTable<Matricula>();
			}
		}
		
		public System.Data.Linq.Table<Mensualidad> Mensualidad
		{
			get
			{
				return this.GetTable<Mensualidad>();
			}
		}
		
		public System.Data.Linq.Table<DetalleMaestro> DetalleMaestro
		{
			get
			{
				return this.GetTable<DetalleMaestro>();
			}
		}
		
		public System.Data.Linq.Table<Maestro> Maestro
		{
			get
			{
				return this.GetTable<Maestro>();
			}
		}
		
		public System.Data.Linq.Table<HorasTrabajadasDia> HorasTrabajadasDia
		{
			get
			{
				return this.GetTable<HorasTrabajadasDia>();
			}
		}
		
		public System.Data.Linq.Table<PagoMensualMaestro> PagoMensualMaestro
		{
			get
			{
				return this.GetTable<PagoMensualMaestro>();
			}
		}
		
		public System.Data.Linq.Table<SolfeoMaestro> SolfeoMaestro
		{
			get
			{
				return this.GetTable<SolfeoMaestro>();
			}
		}
		
		public System.Data.Linq.Table<Cargo> Cargo
		{
			get
			{
				return this.GetTable<Cargo>();
			}
		}
		
		public System.Data.Linq.Table<Usuario> Usuario
		{
			get
			{
				return this.GetTable<Usuario>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Alumnos.Alumno")]
	public partial class Alumno : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Identidad;
		
		private int _Edad;
		
		private int _idTipoAlumno;
		
		private int _Estado;
		
		private int _Usuario;
		
		private System.DateTime _Fecha;
		
		private System.Nullable<decimal> _Descuento;
		
		private EntitySet<DetalleAlumno> _DetalleAlumno;
		
		private EntitySet<Padre> _Padre;
		
		private EntitySet<SolfeoAlumno> _SolfeoAlumno;
		
		private EntitySet<Apellido> _Apellido;
		
		private EntitySet<Nombre> _Nombre;
		
		private EntitySet<Telefono> _Telefono;
		
		private EntitySet<Matricula> _Matricula;
		
		private EntitySet<Mensualidad> _Mensualidad;
		
		private EntityRef<TipoAlumno> _TipoAlumno;
		
		private EntityRef<Estados> _Estados;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnIdentidadChanging(string value);
    partial void OnIdentidadChanged();
    partial void OnEdadChanging(int value);
    partial void OnEdadChanged();
    partial void OnidTipoAlumnoChanging(int value);
    partial void OnidTipoAlumnoChanged();
    partial void OnEstadoChanging(int value);
    partial void OnEstadoChanged();
    partial void OnUsuarioChanging(int value);
    partial void OnUsuarioChanged();
    partial void OnFechaChanging(System.DateTime value);
    partial void OnFechaChanged();
    partial void OnDescuentoChanging(System.Nullable<decimal> value);
    partial void OnDescuentoChanged();
    #endregion
		
		public Alumno()
		{
			this._DetalleAlumno = new EntitySet<DetalleAlumno>(new Action<DetalleAlumno>(this.attach_DetalleAlumno), new Action<DetalleAlumno>(this.detach_DetalleAlumno));
			this._Padre = new EntitySet<Padre>(new Action<Padre>(this.attach_Padre), new Action<Padre>(this.detach_Padre));
			this._SolfeoAlumno = new EntitySet<SolfeoAlumno>(new Action<SolfeoAlumno>(this.attach_SolfeoAlumno), new Action<SolfeoAlumno>(this.detach_SolfeoAlumno));
			this._Apellido = new EntitySet<Apellido>(new Action<Apellido>(this.attach_Apellido), new Action<Apellido>(this.detach_Apellido));
			this._Nombre = new EntitySet<Nombre>(new Action<Nombre>(this.attach_Nombre), new Action<Nombre>(this.detach_Nombre));
			this._Telefono = new EntitySet<Telefono>(new Action<Telefono>(this.attach_Telefono), new Action<Telefono>(this.detach_Telefono));
			this._Matricula = new EntitySet<Matricula>(new Action<Matricula>(this.attach_Matricula), new Action<Matricula>(this.detach_Matricula));
			this._Mensualidad = new EntitySet<Mensualidad>(new Action<Mensualidad>(this.attach_Mensualidad), new Action<Mensualidad>(this.detach_Mensualidad));
			this._TipoAlumno = default(EntityRef<TipoAlumno>);
			this._Estados = default(EntityRef<Estados>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Identidad", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string Identidad
		{
			get
			{
				return this._Identidad;
			}
			set
			{
				if ((this._Identidad != value))
				{
					this.OnIdentidadChanging(value);
					this.SendPropertyChanging();
					this._Identidad = value;
					this.SendPropertyChanged("Identidad");
					this.OnIdentidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Edad", DbType="Int NOT NULL")]
		public int Edad
		{
			get
			{
				return this._Edad;
			}
			set
			{
				if ((this._Edad != value))
				{
					this.OnEdadChanging(value);
					this.SendPropertyChanging();
					this._Edad = value;
					this.SendPropertyChanged("Edad");
					this.OnEdadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTipoAlumno", DbType="Int NOT NULL")]
		public int idTipoAlumno
		{
			get
			{
				return this._idTipoAlumno;
			}
			set
			{
				if ((this._idTipoAlumno != value))
				{
					if (this._TipoAlumno.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTipoAlumnoChanging(value);
					this.SendPropertyChanging();
					this._idTipoAlumno = value;
					this.SendPropertyChanged("idTipoAlumno");
					this.OnidTipoAlumnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="Int NOT NULL")]
		public int Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					if (this._Estados.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usuario", DbType="Int NOT NULL")]
		public int Usuario
		{
			get
			{
				return this._Usuario;
			}
			set
			{
				if ((this._Usuario != value))
				{
					this.OnUsuarioChanging(value);
					this.SendPropertyChanging();
					this._Usuario = value;
					this.SendPropertyChanged("Usuario");
					this.OnUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="DateTime NOT NULL")]
		public System.DateTime Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descuento", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Descuento
		{
			get
			{
				return this._Descuento;
			}
			set
			{
				if ((this._Descuento != value))
				{
					this.OnDescuentoChanging(value);
					this.SendPropertyChanging();
					this._Descuento = value;
					this.SendPropertyChanged("Descuento");
					this.OnDescuentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Alumno_DetalleAlumno", Storage="_DetalleAlumno", ThisKey="id", OtherKey="idAlumno")]
		public EntitySet<DetalleAlumno> DetalleAlumno
		{
			get
			{
				return this._DetalleAlumno;
			}
			set
			{
				this._DetalleAlumno.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Alumno_Padre", Storage="_Padre", ThisKey="id", OtherKey="idAlumno")]
		public EntitySet<Padre> Padre
		{
			get
			{
				return this._Padre;
			}
			set
			{
				this._Padre.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Alumno_SolfeoAlumno", Storage="_SolfeoAlumno", ThisKey="id", OtherKey="idAlumno")]
		public EntitySet<SolfeoAlumno> SolfeoAlumno
		{
			get
			{
				return this._SolfeoAlumno;
			}
			set
			{
				this._SolfeoAlumno.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Alumno_Apellido", Storage="_Apellido", ThisKey="id", OtherKey="idAlumno")]
		public EntitySet<Apellido> Apellido
		{
			get
			{
				return this._Apellido;
			}
			set
			{
				this._Apellido.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Alumno_Nombre", Storage="_Nombre", ThisKey="id", OtherKey="idAlumno")]
		public EntitySet<Nombre> Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				this._Nombre.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Alumno_Telefono", Storage="_Telefono", ThisKey="id", OtherKey="idAlumno")]
		public EntitySet<Telefono> Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				this._Telefono.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Alumno_Matricula", Storage="_Matricula", ThisKey="id", OtherKey="idAlumno")]
		public EntitySet<Matricula> Matricula
		{
			get
			{
				return this._Matricula;
			}
			set
			{
				this._Matricula.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Alumno_Mensualidad", Storage="_Mensualidad", ThisKey="id", OtherKey="idAlumno")]
		public EntitySet<Mensualidad> Mensualidad
		{
			get
			{
				return this._Mensualidad;
			}
			set
			{
				this._Mensualidad.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoAlumno_Alumno", Storage="_TipoAlumno", ThisKey="idTipoAlumno", OtherKey="id", IsForeignKey=true)]
		public TipoAlumno TipoAlumno
		{
			get
			{
				return this._TipoAlumno.Entity;
			}
			set
			{
				TipoAlumno previousValue = this._TipoAlumno.Entity;
				if (((previousValue != value) 
							|| (this._TipoAlumno.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoAlumno.Entity = null;
						previousValue.Alumno.Remove(this);
					}
					this._TipoAlumno.Entity = value;
					if ((value != null))
					{
						value.Alumno.Add(this);
						this._idTipoAlumno = value.id;
					}
					else
					{
						this._idTipoAlumno = default(int);
					}
					this.SendPropertyChanged("TipoAlumno");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estados_Alumno", Storage="_Estados", ThisKey="Estado", OtherKey="id", IsForeignKey=true)]
		public Estados Estados
		{
			get
			{
				return this._Estados.Entity;
			}
			set
			{
				Estados previousValue = this._Estados.Entity;
				if (((previousValue != value) 
							|| (this._Estados.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Estados.Entity = null;
						previousValue.Alumno.Remove(this);
					}
					this._Estados.Entity = value;
					if ((value != null))
					{
						value.Alumno.Add(this);
						this._Estado = value.id;
					}
					else
					{
						this._Estado = default(int);
					}
					this.SendPropertyChanged("Estados");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DetalleAlumno(DetalleAlumno entity)
		{
			this.SendPropertyChanging();
			entity.Alumno = this;
		}
		
		private void detach_DetalleAlumno(DetalleAlumno entity)
		{
			this.SendPropertyChanging();
			entity.Alumno = null;
		}
		
		private void attach_Padre(Padre entity)
		{
			this.SendPropertyChanging();
			entity.Alumno = this;
		}
		
		private void detach_Padre(Padre entity)
		{
			this.SendPropertyChanging();
			entity.Alumno = null;
		}
		
		private void attach_SolfeoAlumno(SolfeoAlumno entity)
		{
			this.SendPropertyChanging();
			entity.Alumno = this;
		}
		
		private void detach_SolfeoAlumno(SolfeoAlumno entity)
		{
			this.SendPropertyChanging();
			entity.Alumno = null;
		}
		
		private void attach_Apellido(Apellido entity)
		{
			this.SendPropertyChanging();
			entity.Alumno = this;
		}
		
		private void detach_Apellido(Apellido entity)
		{
			this.SendPropertyChanging();
			entity.Alumno = null;
		}
		
		private void attach_Nombre(Nombre entity)
		{
			this.SendPropertyChanging();
			entity.Alumno = this;
		}
		
		private void detach_Nombre(Nombre entity)
		{
			this.SendPropertyChanging();
			entity.Alumno = null;
		}
		
		private void attach_Telefono(Telefono entity)
		{
			this.SendPropertyChanging();
			entity.Alumno = this;
		}
		
		private void detach_Telefono(Telefono entity)
		{
			this.SendPropertyChanging();
			entity.Alumno = null;
		}
		
		private void attach_Matricula(Matricula entity)
		{
			this.SendPropertyChanging();
			entity.Alumno = this;
		}
		
		private void detach_Matricula(Matricula entity)
		{
			this.SendPropertyChanging();
			entity.Alumno = null;
		}
		
		private void attach_Mensualidad(Mensualidad entity)
		{
			this.SendPropertyChanging();
			entity.Alumno = this;
		}
		
		private void detach_Mensualidad(Mensualidad entity)
		{
			this.SendPropertyChanging();
			entity.Alumno = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Alumnos.Categoria")]
	public partial class Categoria : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Categoria1;
		
		private int _Estado;
		
		private decimal _Precio;
		
		private EntitySet<DetalleAlumno> _DetalleAlumno;
		
		private EntitySet<DetalleMaestro> _DetalleMaestro;
		
		private EntityRef<Estados> _Estados;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnCategoria1Changing(string value);
    partial void OnCategoria1Changed();
    partial void OnEstadoChanging(int value);
    partial void OnEstadoChanged();
    partial void OnPrecioChanging(decimal value);
    partial void OnPrecioChanged();
    #endregion
		
		public Categoria()
		{
			this._DetalleAlumno = new EntitySet<DetalleAlumno>(new Action<DetalleAlumno>(this.attach_DetalleAlumno), new Action<DetalleAlumno>(this.detach_DetalleAlumno));
			this._DetalleMaestro = new EntitySet<DetalleMaestro>(new Action<DetalleMaestro>(this.attach_DetalleMaestro), new Action<DetalleMaestro>(this.detach_DetalleMaestro));
			this._Estados = default(EntityRef<Estados>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Categoria", Storage="_Categoria1", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Categoria1
		{
			get
			{
				return this._Categoria1;
			}
			set
			{
				if ((this._Categoria1 != value))
				{
					this.OnCategoria1Changing(value);
					this.SendPropertyChanging();
					this._Categoria1 = value;
					this.SendPropertyChanged("Categoria1");
					this.OnCategoria1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="Int NOT NULL")]
		public int Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					if (this._Estados.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Precio", DbType="Decimal(18,0) NOT NULL")]
		public decimal Precio
		{
			get
			{
				return this._Precio;
			}
			set
			{
				if ((this._Precio != value))
				{
					this.OnPrecioChanging(value);
					this.SendPropertyChanging();
					this._Precio = value;
					this.SendPropertyChanged("Precio");
					this.OnPrecioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Categoria_DetalleAlumno", Storage="_DetalleAlumno", ThisKey="id", OtherKey="idCategoria")]
		public EntitySet<DetalleAlumno> DetalleAlumno
		{
			get
			{
				return this._DetalleAlumno;
			}
			set
			{
				this._DetalleAlumno.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Categoria_DetalleMaestro", Storage="_DetalleMaestro", ThisKey="id", OtherKey="idCategoria")]
		public EntitySet<DetalleMaestro> DetalleMaestro
		{
			get
			{
				return this._DetalleMaestro;
			}
			set
			{
				this._DetalleMaestro.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estados_Categoria", Storage="_Estados", ThisKey="Estado", OtherKey="id", IsForeignKey=true)]
		public Estados Estados
		{
			get
			{
				return this._Estados.Entity;
			}
			set
			{
				Estados previousValue = this._Estados.Entity;
				if (((previousValue != value) 
							|| (this._Estados.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Estados.Entity = null;
						previousValue.Categoria.Remove(this);
					}
					this._Estados.Entity = value;
					if ((value != null))
					{
						value.Categoria.Add(this);
						this._Estado = value.id;
					}
					else
					{
						this._Estado = default(int);
					}
					this.SendPropertyChanged("Estados");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DetalleAlumno(DetalleAlumno entity)
		{
			this.SendPropertyChanging();
			entity.Categoria = this;
		}
		
		private void detach_DetalleAlumno(DetalleAlumno entity)
		{
			this.SendPropertyChanging();
			entity.Categoria = null;
		}
		
		private void attach_DetalleMaestro(DetalleMaestro entity)
		{
			this.SendPropertyChanging();
			entity.Categoria = this;
		}
		
		private void detach_DetalleMaestro(DetalleMaestro entity)
		{
			this.SendPropertyChanging();
			entity.Categoria = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Alumnos.DetalleAlumno")]
	public partial class DetalleAlumno : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idAlumno;
		
		private int _idCategoria;
		
		private System.Nullable<int> _idInstrumento;
		
		private System.Nullable<int> _idSeccionInstrumento;
		
		private System.DateTime _Fecha;
		
		private int _Usuario;
		
		private int _Estado;
		
		private EntityRef<Alumno> _Alumno;
		
		private EntityRef<Categoria> _Categoria;
		
		private EntityRef<Instrumento> _Instrumento;
		
		private EntityRef<SeccionInstrumento> _SeccionInstrumento;
		
		private EntityRef<Estados> _Estados;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidAlumnoChanging(int value);
    partial void OnidAlumnoChanged();
    partial void OnidCategoriaChanging(int value);
    partial void OnidCategoriaChanged();
    partial void OnidInstrumentoChanging(System.Nullable<int> value);
    partial void OnidInstrumentoChanged();
    partial void OnidSeccionInstrumentoChanging(System.Nullable<int> value);
    partial void OnidSeccionInstrumentoChanged();
    partial void OnFechaChanging(System.DateTime value);
    partial void OnFechaChanged();
    partial void OnUsuarioChanging(int value);
    partial void OnUsuarioChanged();
    partial void OnEstadoChanging(int value);
    partial void OnEstadoChanged();
    #endregion
		
		public DetalleAlumno()
		{
			this._Alumno = default(EntityRef<Alumno>);
			this._Categoria = default(EntityRef<Categoria>);
			this._Instrumento = default(EntityRef<Instrumento>);
			this._SeccionInstrumento = default(EntityRef<SeccionInstrumento>);
			this._Estados = default(EntityRef<Estados>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idAlumno", DbType="Int NOT NULL")]
		public int idAlumno
		{
			get
			{
				return this._idAlumno;
			}
			set
			{
				if ((this._idAlumno != value))
				{
					if (this._Alumno.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidAlumnoChanging(value);
					this.SendPropertyChanging();
					this._idAlumno = value;
					this.SendPropertyChanged("idAlumno");
					this.OnidAlumnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCategoria", DbType="Int NOT NULL")]
		public int idCategoria
		{
			get
			{
				return this._idCategoria;
			}
			set
			{
				if ((this._idCategoria != value))
				{
					if (this._Categoria.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCategoriaChanging(value);
					this.SendPropertyChanging();
					this._idCategoria = value;
					this.SendPropertyChanged("idCategoria");
					this.OnidCategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idInstrumento", DbType="Int")]
		public System.Nullable<int> idInstrumento
		{
			get
			{
				return this._idInstrumento;
			}
			set
			{
				if ((this._idInstrumento != value))
				{
					if (this._Instrumento.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidInstrumentoChanging(value);
					this.SendPropertyChanging();
					this._idInstrumento = value;
					this.SendPropertyChanged("idInstrumento");
					this.OnidInstrumentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idSeccionInstrumento", DbType="Int")]
		public System.Nullable<int> idSeccionInstrumento
		{
			get
			{
				return this._idSeccionInstrumento;
			}
			set
			{
				if ((this._idSeccionInstrumento != value))
				{
					if (this._SeccionInstrumento.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidSeccionInstrumentoChanging(value);
					this.SendPropertyChanging();
					this._idSeccionInstrumento = value;
					this.SendPropertyChanged("idSeccionInstrumento");
					this.OnidSeccionInstrumentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="DateTime NOT NULL")]
		public System.DateTime Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usuario", DbType="Int NOT NULL")]
		public int Usuario
		{
			get
			{
				return this._Usuario;
			}
			set
			{
				if ((this._Usuario != value))
				{
					this.OnUsuarioChanging(value);
					this.SendPropertyChanging();
					this._Usuario = value;
					this.SendPropertyChanged("Usuario");
					this.OnUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="Int NOT NULL")]
		public int Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					if (this._Estados.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Alumno_DetalleAlumno", Storage="_Alumno", ThisKey="idAlumno", OtherKey="id", IsForeignKey=true)]
		public Alumno Alumno
		{
			get
			{
				return this._Alumno.Entity;
			}
			set
			{
				Alumno previousValue = this._Alumno.Entity;
				if (((previousValue != value) 
							|| (this._Alumno.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Alumno.Entity = null;
						previousValue.DetalleAlumno.Remove(this);
					}
					this._Alumno.Entity = value;
					if ((value != null))
					{
						value.DetalleAlumno.Add(this);
						this._idAlumno = value.id;
					}
					else
					{
						this._idAlumno = default(int);
					}
					this.SendPropertyChanged("Alumno");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Categoria_DetalleAlumno", Storage="_Categoria", ThisKey="idCategoria", OtherKey="id", IsForeignKey=true)]
		public Categoria Categoria
		{
			get
			{
				return this._Categoria.Entity;
			}
			set
			{
				Categoria previousValue = this._Categoria.Entity;
				if (((previousValue != value) 
							|| (this._Categoria.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Categoria.Entity = null;
						previousValue.DetalleAlumno.Remove(this);
					}
					this._Categoria.Entity = value;
					if ((value != null))
					{
						value.DetalleAlumno.Add(this);
						this._idCategoria = value.id;
					}
					else
					{
						this._idCategoria = default(int);
					}
					this.SendPropertyChanged("Categoria");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Instrumento_DetalleAlumno", Storage="_Instrumento", ThisKey="idInstrumento", OtherKey="id", IsForeignKey=true)]
		public Instrumento Instrumento
		{
			get
			{
				return this._Instrumento.Entity;
			}
			set
			{
				Instrumento previousValue = this._Instrumento.Entity;
				if (((previousValue != value) 
							|| (this._Instrumento.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Instrumento.Entity = null;
						previousValue.DetalleAlumno.Remove(this);
					}
					this._Instrumento.Entity = value;
					if ((value != null))
					{
						value.DetalleAlumno.Add(this);
						this._idInstrumento = value.id;
					}
					else
					{
						this._idInstrumento = default(Nullable<int>);
					}
					this.SendPropertyChanged("Instrumento");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SeccionInstrumento_DetalleAlumno", Storage="_SeccionInstrumento", ThisKey="idSeccionInstrumento", OtherKey="id", IsForeignKey=true)]
		public SeccionInstrumento SeccionInstrumento
		{
			get
			{
				return this._SeccionInstrumento.Entity;
			}
			set
			{
				SeccionInstrumento previousValue = this._SeccionInstrumento.Entity;
				if (((previousValue != value) 
							|| (this._SeccionInstrumento.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SeccionInstrumento.Entity = null;
						previousValue.DetalleAlumno.Remove(this);
					}
					this._SeccionInstrumento.Entity = value;
					if ((value != null))
					{
						value.DetalleAlumno.Add(this);
						this._idSeccionInstrumento = value.id;
					}
					else
					{
						this._idSeccionInstrumento = default(Nullable<int>);
					}
					this.SendPropertyChanged("SeccionInstrumento");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estados_DetalleAlumno", Storage="_Estados", ThisKey="Estado", OtherKey="id", IsForeignKey=true)]
		public Estados Estados
		{
			get
			{
				return this._Estados.Entity;
			}
			set
			{
				Estados previousValue = this._Estados.Entity;
				if (((previousValue != value) 
							|| (this._Estados.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Estados.Entity = null;
						previousValue.DetalleAlumno.Remove(this);
					}
					this._Estados.Entity = value;
					if ((value != null))
					{
						value.DetalleAlumno.Add(this);
						this._Estado = value.id;
					}
					else
					{
						this._Estado = default(int);
					}
					this.SendPropertyChanged("Estados");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Alumnos.Instrumento")]
	public partial class Instrumento : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Instrumento1;
		
		private int _Estado;
		
		private System.DateTime _Fecha;
		
		private int _Usuario;
		
		private EntitySet<DetalleAlumno> _DetalleAlumno;
		
		private EntitySet<SeccionInstrumento> _SeccionInstrumento;
		
		private EntitySet<DetalleMaestro> _DetalleMaestro;
		
		private EntityRef<Estados> _Estados;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnInstrumento1Changing(string value);
    partial void OnInstrumento1Changed();
    partial void OnEstadoChanging(int value);
    partial void OnEstadoChanged();
    partial void OnFechaChanging(System.DateTime value);
    partial void OnFechaChanged();
    partial void OnUsuarioChanging(int value);
    partial void OnUsuarioChanged();
    #endregion
		
		public Instrumento()
		{
			this._DetalleAlumno = new EntitySet<DetalleAlumno>(new Action<DetalleAlumno>(this.attach_DetalleAlumno), new Action<DetalleAlumno>(this.detach_DetalleAlumno));
			this._SeccionInstrumento = new EntitySet<SeccionInstrumento>(new Action<SeccionInstrumento>(this.attach_SeccionInstrumento), new Action<SeccionInstrumento>(this.detach_SeccionInstrumento));
			this._DetalleMaestro = new EntitySet<DetalleMaestro>(new Action<DetalleMaestro>(this.attach_DetalleMaestro), new Action<DetalleMaestro>(this.detach_DetalleMaestro));
			this._Estados = default(EntityRef<Estados>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Instrumento", Storage="_Instrumento1", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Instrumento1
		{
			get
			{
				return this._Instrumento1;
			}
			set
			{
				if ((this._Instrumento1 != value))
				{
					this.OnInstrumento1Changing(value);
					this.SendPropertyChanging();
					this._Instrumento1 = value;
					this.SendPropertyChanged("Instrumento1");
					this.OnInstrumento1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="Int NOT NULL")]
		public int Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					if (this._Estados.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="DateTime NOT NULL")]
		public System.DateTime Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usuario", DbType="Int NOT NULL")]
		public int Usuario
		{
			get
			{
				return this._Usuario;
			}
			set
			{
				if ((this._Usuario != value))
				{
					this.OnUsuarioChanging(value);
					this.SendPropertyChanging();
					this._Usuario = value;
					this.SendPropertyChanged("Usuario");
					this.OnUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Instrumento_DetalleAlumno", Storage="_DetalleAlumno", ThisKey="id", OtherKey="idInstrumento")]
		public EntitySet<DetalleAlumno> DetalleAlumno
		{
			get
			{
				return this._DetalleAlumno;
			}
			set
			{
				this._DetalleAlumno.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Instrumento_SeccionInstrumento", Storage="_SeccionInstrumento", ThisKey="id", OtherKey="idInstrumento")]
		public EntitySet<SeccionInstrumento> SeccionInstrumento
		{
			get
			{
				return this._SeccionInstrumento;
			}
			set
			{
				this._SeccionInstrumento.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Instrumento_DetalleMaestro", Storage="_DetalleMaestro", ThisKey="id", OtherKey="idInstrumento")]
		public EntitySet<DetalleMaestro> DetalleMaestro
		{
			get
			{
				return this._DetalleMaestro;
			}
			set
			{
				this._DetalleMaestro.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estados_Instrumento", Storage="_Estados", ThisKey="Estado", OtherKey="id", IsForeignKey=true)]
		public Estados Estados
		{
			get
			{
				return this._Estados.Entity;
			}
			set
			{
				Estados previousValue = this._Estados.Entity;
				if (((previousValue != value) 
							|| (this._Estados.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Estados.Entity = null;
						previousValue.Instrumento.Remove(this);
					}
					this._Estados.Entity = value;
					if ((value != null))
					{
						value.Instrumento.Add(this);
						this._Estado = value.id;
					}
					else
					{
						this._Estado = default(int);
					}
					this.SendPropertyChanged("Estados");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DetalleAlumno(DetalleAlumno entity)
		{
			this.SendPropertyChanging();
			entity.Instrumento = this;
		}
		
		private void detach_DetalleAlumno(DetalleAlumno entity)
		{
			this.SendPropertyChanging();
			entity.Instrumento = null;
		}
		
		private void attach_SeccionInstrumento(SeccionInstrumento entity)
		{
			this.SendPropertyChanging();
			entity.Instrumento = this;
		}
		
		private void detach_SeccionInstrumento(SeccionInstrumento entity)
		{
			this.SendPropertyChanging();
			entity.Instrumento = null;
		}
		
		private void attach_DetalleMaestro(DetalleMaestro entity)
		{
			this.SendPropertyChanging();
			entity.Instrumento = this;
		}
		
		private void detach_DetalleMaestro(DetalleMaestro entity)
		{
			this.SendPropertyChanging();
			entity.Instrumento = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Alumnos.Padre")]
	public partial class Padre : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idAlumno;
		
		private int _Edad;
		
		private int _Estado;
		
		private System.DateTime _Fecha;
		
		private int _Usuario;
		
		private EntitySet<Apellido> _Apellido;
		
		private EntitySet<Nombre> _Nombre;
		
		private EntitySet<Telefono> _Telefono;
		
		private EntityRef<Alumno> _Alumno;
		
		private EntityRef<Estados> _Estados;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidAlumnoChanging(int value);
    partial void OnidAlumnoChanged();
    partial void OnEdadChanging(int value);
    partial void OnEdadChanged();
    partial void OnEstadoChanging(int value);
    partial void OnEstadoChanged();
    partial void OnFechaChanging(System.DateTime value);
    partial void OnFechaChanged();
    partial void OnUsuarioChanging(int value);
    partial void OnUsuarioChanged();
    #endregion
		
		public Padre()
		{
			this._Apellido = new EntitySet<Apellido>(new Action<Apellido>(this.attach_Apellido), new Action<Apellido>(this.detach_Apellido));
			this._Nombre = new EntitySet<Nombre>(new Action<Nombre>(this.attach_Nombre), new Action<Nombre>(this.detach_Nombre));
			this._Telefono = new EntitySet<Telefono>(new Action<Telefono>(this.attach_Telefono), new Action<Telefono>(this.detach_Telefono));
			this._Alumno = default(EntityRef<Alumno>);
			this._Estados = default(EntityRef<Estados>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idAlumno", DbType="Int NOT NULL")]
		public int idAlumno
		{
			get
			{
				return this._idAlumno;
			}
			set
			{
				if ((this._idAlumno != value))
				{
					if (this._Alumno.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidAlumnoChanging(value);
					this.SendPropertyChanging();
					this._idAlumno = value;
					this.SendPropertyChanged("idAlumno");
					this.OnidAlumnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Edad", DbType="Int NOT NULL")]
		public int Edad
		{
			get
			{
				return this._Edad;
			}
			set
			{
				if ((this._Edad != value))
				{
					this.OnEdadChanging(value);
					this.SendPropertyChanging();
					this._Edad = value;
					this.SendPropertyChanged("Edad");
					this.OnEdadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="Int NOT NULL")]
		public int Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					if (this._Estados.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="DateTime NOT NULL")]
		public System.DateTime Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usuario", DbType="Int NOT NULL")]
		public int Usuario
		{
			get
			{
				return this._Usuario;
			}
			set
			{
				if ((this._Usuario != value))
				{
					this.OnUsuarioChanging(value);
					this.SendPropertyChanging();
					this._Usuario = value;
					this.SendPropertyChanged("Usuario");
					this.OnUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Padre_Apellido", Storage="_Apellido", ThisKey="id", OtherKey="idPadre")]
		public EntitySet<Apellido> Apellido
		{
			get
			{
				return this._Apellido;
			}
			set
			{
				this._Apellido.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Padre_Nombre", Storage="_Nombre", ThisKey="id", OtherKey="idPadre")]
		public EntitySet<Nombre> Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				this._Nombre.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Padre_Telefono", Storage="_Telefono", ThisKey="id", OtherKey="idPadre")]
		public EntitySet<Telefono> Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				this._Telefono.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Alumno_Padre", Storage="_Alumno", ThisKey="idAlumno", OtherKey="id", IsForeignKey=true)]
		public Alumno Alumno
		{
			get
			{
				return this._Alumno.Entity;
			}
			set
			{
				Alumno previousValue = this._Alumno.Entity;
				if (((previousValue != value) 
							|| (this._Alumno.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Alumno.Entity = null;
						previousValue.Padre.Remove(this);
					}
					this._Alumno.Entity = value;
					if ((value != null))
					{
						value.Padre.Add(this);
						this._idAlumno = value.id;
					}
					else
					{
						this._idAlumno = default(int);
					}
					this.SendPropertyChanged("Alumno");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estados_Padre", Storage="_Estados", ThisKey="Estado", OtherKey="id", IsForeignKey=true)]
		public Estados Estados
		{
			get
			{
				return this._Estados.Entity;
			}
			set
			{
				Estados previousValue = this._Estados.Entity;
				if (((previousValue != value) 
							|| (this._Estados.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Estados.Entity = null;
						previousValue.Padre.Remove(this);
					}
					this._Estados.Entity = value;
					if ((value != null))
					{
						value.Padre.Add(this);
						this._Estado = value.id;
					}
					else
					{
						this._Estado = default(int);
					}
					this.SendPropertyChanged("Estados");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Apellido(Apellido entity)
		{
			this.SendPropertyChanging();
			entity.Padre = this;
		}
		
		private void detach_Apellido(Apellido entity)
		{
			this.SendPropertyChanging();
			entity.Padre = null;
		}
		
		private void attach_Nombre(Nombre entity)
		{
			this.SendPropertyChanging();
			entity.Padre = this;
		}
		
		private void detach_Nombre(Nombre entity)
		{
			this.SendPropertyChanging();
			entity.Padre = null;
		}
		
		private void attach_Telefono(Telefono entity)
		{
			this.SendPropertyChanging();
			entity.Padre = this;
		}
		
		private void detach_Telefono(Telefono entity)
		{
			this.SendPropertyChanging();
			entity.Padre = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Alumnos.SeccionInstrumento")]
	public partial class SeccionInstrumento : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Seccion;
		
		private int _idInstrumento;
		
		private int _Estado;
		
		private System.DateTime _Fecha;
		
		private int _Usuario;
		
		private EntitySet<DetalleAlumno> _DetalleAlumno;
		
		private EntitySet<DetalleMaestro> _DetalleMaestro;
		
		private EntityRef<Instrumento> _Instrumento;
		
		private EntityRef<Estados> _Estados;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnSeccionChanging(string value);
    partial void OnSeccionChanged();
    partial void OnidInstrumentoChanging(int value);
    partial void OnidInstrumentoChanged();
    partial void OnEstadoChanging(int value);
    partial void OnEstadoChanged();
    partial void OnFechaChanging(System.DateTime value);
    partial void OnFechaChanged();
    partial void OnUsuarioChanging(int value);
    partial void OnUsuarioChanged();
    #endregion
		
		public SeccionInstrumento()
		{
			this._DetalleAlumno = new EntitySet<DetalleAlumno>(new Action<DetalleAlumno>(this.attach_DetalleAlumno), new Action<DetalleAlumno>(this.detach_DetalleAlumno));
			this._DetalleMaestro = new EntitySet<DetalleMaestro>(new Action<DetalleMaestro>(this.attach_DetalleMaestro), new Action<DetalleMaestro>(this.detach_DetalleMaestro));
			this._Instrumento = default(EntityRef<Instrumento>);
			this._Estados = default(EntityRef<Estados>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Seccion", DbType="NVarChar(2) NOT NULL", CanBeNull=false)]
		public string Seccion
		{
			get
			{
				return this._Seccion;
			}
			set
			{
				if ((this._Seccion != value))
				{
					this.OnSeccionChanging(value);
					this.SendPropertyChanging();
					this._Seccion = value;
					this.SendPropertyChanged("Seccion");
					this.OnSeccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idInstrumento", DbType="Int NOT NULL")]
		public int idInstrumento
		{
			get
			{
				return this._idInstrumento;
			}
			set
			{
				if ((this._idInstrumento != value))
				{
					if (this._Instrumento.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidInstrumentoChanging(value);
					this.SendPropertyChanging();
					this._idInstrumento = value;
					this.SendPropertyChanged("idInstrumento");
					this.OnidInstrumentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="Int NOT NULL")]
		public int Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					if (this._Estados.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="DateTime NOT NULL")]
		public System.DateTime Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usuario", DbType="Int NOT NULL")]
		public int Usuario
		{
			get
			{
				return this._Usuario;
			}
			set
			{
				if ((this._Usuario != value))
				{
					this.OnUsuarioChanging(value);
					this.SendPropertyChanging();
					this._Usuario = value;
					this.SendPropertyChanged("Usuario");
					this.OnUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SeccionInstrumento_DetalleAlumno", Storage="_DetalleAlumno", ThisKey="id", OtherKey="idSeccionInstrumento")]
		public EntitySet<DetalleAlumno> DetalleAlumno
		{
			get
			{
				return this._DetalleAlumno;
			}
			set
			{
				this._DetalleAlumno.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SeccionInstrumento_DetalleMaestro", Storage="_DetalleMaestro", ThisKey="id", OtherKey="idSeccionInstrumento")]
		public EntitySet<DetalleMaestro> DetalleMaestro
		{
			get
			{
				return this._DetalleMaestro;
			}
			set
			{
				this._DetalleMaestro.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Instrumento_SeccionInstrumento", Storage="_Instrumento", ThisKey="idInstrumento", OtherKey="id", IsForeignKey=true)]
		public Instrumento Instrumento
		{
			get
			{
				return this._Instrumento.Entity;
			}
			set
			{
				Instrumento previousValue = this._Instrumento.Entity;
				if (((previousValue != value) 
							|| (this._Instrumento.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Instrumento.Entity = null;
						previousValue.SeccionInstrumento.Remove(this);
					}
					this._Instrumento.Entity = value;
					if ((value != null))
					{
						value.SeccionInstrumento.Add(this);
						this._idInstrumento = value.id;
					}
					else
					{
						this._idInstrumento = default(int);
					}
					this.SendPropertyChanged("Instrumento");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estados_SeccionInstrumento", Storage="_Estados", ThisKey="Estado", OtherKey="id", IsForeignKey=true)]
		public Estados Estados
		{
			get
			{
				return this._Estados.Entity;
			}
			set
			{
				Estados previousValue = this._Estados.Entity;
				if (((previousValue != value) 
							|| (this._Estados.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Estados.Entity = null;
						previousValue.SeccionInstrumento.Remove(this);
					}
					this._Estados.Entity = value;
					if ((value != null))
					{
						value.SeccionInstrumento.Add(this);
						this._Estado = value.id;
					}
					else
					{
						this._Estado = default(int);
					}
					this.SendPropertyChanged("Estados");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DetalleAlumno(DetalleAlumno entity)
		{
			this.SendPropertyChanging();
			entity.SeccionInstrumento = this;
		}
		
		private void detach_DetalleAlumno(DetalleAlumno entity)
		{
			this.SendPropertyChanging();
			entity.SeccionInstrumento = null;
		}
		
		private void attach_DetalleMaestro(DetalleMaestro entity)
		{
			this.SendPropertyChanging();
			entity.SeccionInstrumento = this;
		}
		
		private void detach_DetalleMaestro(DetalleMaestro entity)
		{
			this.SendPropertyChanging();
			entity.SeccionInstrumento = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Alumnos.Solfeo")]
	public partial class Solfeo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Seccion;
		
		private int _Estado;
		
		private System.DateTime _Fecha;
		
		private int _Usuario;
		
		private EntitySet<SolfeoAlumno> _SolfeoAlumno;
		
		private EntityRef<Estados> _Estados;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnSeccionChanging(string value);
    partial void OnSeccionChanged();
    partial void OnEstadoChanging(int value);
    partial void OnEstadoChanged();
    partial void OnFechaChanging(System.DateTime value);
    partial void OnFechaChanged();
    partial void OnUsuarioChanging(int value);
    partial void OnUsuarioChanged();
    #endregion
		
		public Solfeo()
		{
			this._SolfeoAlumno = new EntitySet<SolfeoAlumno>(new Action<SolfeoAlumno>(this.attach_SolfeoAlumno), new Action<SolfeoAlumno>(this.detach_SolfeoAlumno));
			this._Estados = default(EntityRef<Estados>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Seccion", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string Seccion
		{
			get
			{
				return this._Seccion;
			}
			set
			{
				if ((this._Seccion != value))
				{
					this.OnSeccionChanging(value);
					this.SendPropertyChanging();
					this._Seccion = value;
					this.SendPropertyChanged("Seccion");
					this.OnSeccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="Int NOT NULL")]
		public int Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					if (this._Estados.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="DateTime NOT NULL")]
		public System.DateTime Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usuario", DbType="Int NOT NULL")]
		public int Usuario
		{
			get
			{
				return this._Usuario;
			}
			set
			{
				if ((this._Usuario != value))
				{
					this.OnUsuarioChanging(value);
					this.SendPropertyChanging();
					this._Usuario = value;
					this.SendPropertyChanged("Usuario");
					this.OnUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Solfeo_SolfeoAlumno", Storage="_SolfeoAlumno", ThisKey="id", OtherKey="idSolfeo")]
		public EntitySet<SolfeoAlumno> SolfeoAlumno
		{
			get
			{
				return this._SolfeoAlumno;
			}
			set
			{
				this._SolfeoAlumno.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estados_Solfeo", Storage="_Estados", ThisKey="Estado", OtherKey="id", IsForeignKey=true)]
		public Estados Estados
		{
			get
			{
				return this._Estados.Entity;
			}
			set
			{
				Estados previousValue = this._Estados.Entity;
				if (((previousValue != value) 
							|| (this._Estados.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Estados.Entity = null;
						previousValue.Solfeo.Remove(this);
					}
					this._Estados.Entity = value;
					if ((value != null))
					{
						value.Solfeo.Add(this);
						this._Estado = value.id;
					}
					else
					{
						this._Estado = default(int);
					}
					this.SendPropertyChanged("Estados");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SolfeoAlumno(SolfeoAlumno entity)
		{
			this.SendPropertyChanging();
			entity.Solfeo = this;
		}
		
		private void detach_SolfeoAlumno(SolfeoAlumno entity)
		{
			this.SendPropertyChanging();
			entity.Solfeo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Alumnos.SolfeoAlumno")]
	public partial class SolfeoAlumno : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idAlumno;
		
		private int _idSolfeo;
		
		private System.DateTime _Fecha;
		
		private int _Usuario;
		
		private int _Estado;
		
		private EntityRef<Alumno> _Alumno;
		
		private EntityRef<Solfeo> _Solfeo;
		
		private EntityRef<Estados> _Estados;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidAlumnoChanging(int value);
    partial void OnidAlumnoChanged();
    partial void OnidSolfeoChanging(int value);
    partial void OnidSolfeoChanged();
    partial void OnFechaChanging(System.DateTime value);
    partial void OnFechaChanged();
    partial void OnUsuarioChanging(int value);
    partial void OnUsuarioChanged();
    partial void OnEstadoChanging(int value);
    partial void OnEstadoChanged();
    #endregion
		
		public SolfeoAlumno()
		{
			this._Alumno = default(EntityRef<Alumno>);
			this._Solfeo = default(EntityRef<Solfeo>);
			this._Estados = default(EntityRef<Estados>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idAlumno", DbType="Int NOT NULL")]
		public int idAlumno
		{
			get
			{
				return this._idAlumno;
			}
			set
			{
				if ((this._idAlumno != value))
				{
					if (this._Alumno.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidAlumnoChanging(value);
					this.SendPropertyChanging();
					this._idAlumno = value;
					this.SendPropertyChanged("idAlumno");
					this.OnidAlumnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idSolfeo", DbType="Int NOT NULL")]
		public int idSolfeo
		{
			get
			{
				return this._idSolfeo;
			}
			set
			{
				if ((this._idSolfeo != value))
				{
					if (this._Solfeo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidSolfeoChanging(value);
					this.SendPropertyChanging();
					this._idSolfeo = value;
					this.SendPropertyChanged("idSolfeo");
					this.OnidSolfeoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="DateTime NOT NULL")]
		public System.DateTime Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usuario", DbType="Int NOT NULL")]
		public int Usuario
		{
			get
			{
				return this._Usuario;
			}
			set
			{
				if ((this._Usuario != value))
				{
					this.OnUsuarioChanging(value);
					this.SendPropertyChanging();
					this._Usuario = value;
					this.SendPropertyChanged("Usuario");
					this.OnUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="Int NOT NULL")]
		public int Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					if (this._Estados.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Alumno_SolfeoAlumno", Storage="_Alumno", ThisKey="idAlumno", OtherKey="id", IsForeignKey=true)]
		public Alumno Alumno
		{
			get
			{
				return this._Alumno.Entity;
			}
			set
			{
				Alumno previousValue = this._Alumno.Entity;
				if (((previousValue != value) 
							|| (this._Alumno.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Alumno.Entity = null;
						previousValue.SolfeoAlumno.Remove(this);
					}
					this._Alumno.Entity = value;
					if ((value != null))
					{
						value.SolfeoAlumno.Add(this);
						this._idAlumno = value.id;
					}
					else
					{
						this._idAlumno = default(int);
					}
					this.SendPropertyChanged("Alumno");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Solfeo_SolfeoAlumno", Storage="_Solfeo", ThisKey="idSolfeo", OtherKey="id", IsForeignKey=true)]
		public Solfeo Solfeo
		{
			get
			{
				return this._Solfeo.Entity;
			}
			set
			{
				Solfeo previousValue = this._Solfeo.Entity;
				if (((previousValue != value) 
							|| (this._Solfeo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Solfeo.Entity = null;
						previousValue.SolfeoAlumno.Remove(this);
					}
					this._Solfeo.Entity = value;
					if ((value != null))
					{
						value.SolfeoAlumno.Add(this);
						this._idSolfeo = value.id;
					}
					else
					{
						this._idSolfeo = default(int);
					}
					this.SendPropertyChanged("Solfeo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estados_SolfeoAlumno", Storage="_Estados", ThisKey="Estado", OtherKey="id", IsForeignKey=true)]
		public Estados Estados
		{
			get
			{
				return this._Estados.Entity;
			}
			set
			{
				Estados previousValue = this._Estados.Entity;
				if (((previousValue != value) 
							|| (this._Estados.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Estados.Entity = null;
						previousValue.SolfeoAlumno.Remove(this);
					}
					this._Estados.Entity = value;
					if ((value != null))
					{
						value.SolfeoAlumno.Add(this);
						this._Estado = value.id;
					}
					else
					{
						this._Estado = default(int);
					}
					this.SendPropertyChanged("Estados");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Alumnos.TipoAlumno")]
	public partial class TipoAlumno : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Tipo;
		
		private EntitySet<Alumno> _Alumno;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnTipoChanging(string value);
    partial void OnTipoChanged();
    #endregion
		
		public TipoAlumno()
		{
			this._Alumno = new EntitySet<Alumno>(new Action<Alumno>(this.attach_Alumno), new Action<Alumno>(this.detach_Alumno));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tipo", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string Tipo
		{
			get
			{
				return this._Tipo;
			}
			set
			{
				if ((this._Tipo != value))
				{
					this.OnTipoChanging(value);
					this.SendPropertyChanging();
					this._Tipo = value;
					this.SendPropertyChanged("Tipo");
					this.OnTipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoAlumno_Alumno", Storage="_Alumno", ThisKey="id", OtherKey="idTipoAlumno")]
		public EntitySet<Alumno> Alumno
		{
			get
			{
				return this._Alumno;
			}
			set
			{
				this._Alumno.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Alumno(Alumno entity)
		{
			this.SendPropertyChanging();
			entity.TipoAlumno = this;
		}
		
		private void detach_Alumno(Alumno entity)
		{
			this.SendPropertyChanging();
			entity.TipoAlumno = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Informacion.Apellido")]
	public partial class Apellido : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Apellido1;
		
		private System.Nullable<int> _idAlumno;
		
		private System.Nullable<int> _idPadre;
		
		private System.Nullable<int> _idMaestro;
		
		private EntityRef<Alumno> _Alumno;
		
		private EntityRef<Padre> _Padre;
		
		private EntityRef<Maestro> _Maestro;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnApellido1Changing(string value);
    partial void OnApellido1Changed();
    partial void OnidAlumnoChanging(System.Nullable<int> value);
    partial void OnidAlumnoChanged();
    partial void OnidPadreChanging(System.Nullable<int> value);
    partial void OnidPadreChanged();
    partial void OnidMaestroChanging(System.Nullable<int> value);
    partial void OnidMaestroChanged();
    #endregion
		
		public Apellido()
		{
			this._Alumno = default(EntityRef<Alumno>);
			this._Padre = default(EntityRef<Padre>);
			this._Maestro = default(EntityRef<Maestro>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Apellido", Storage="_Apellido1", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Apellido1
		{
			get
			{
				return this._Apellido1;
			}
			set
			{
				if ((this._Apellido1 != value))
				{
					this.OnApellido1Changing(value);
					this.SendPropertyChanging();
					this._Apellido1 = value;
					this.SendPropertyChanged("Apellido1");
					this.OnApellido1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idAlumno", DbType="Int")]
		public System.Nullable<int> idAlumno
		{
			get
			{
				return this._idAlumno;
			}
			set
			{
				if ((this._idAlumno != value))
				{
					if (this._Alumno.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidAlumnoChanging(value);
					this.SendPropertyChanging();
					this._idAlumno = value;
					this.SendPropertyChanged("idAlumno");
					this.OnidAlumnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPadre", DbType="Int")]
		public System.Nullable<int> idPadre
		{
			get
			{
				return this._idPadre;
			}
			set
			{
				if ((this._idPadre != value))
				{
					if (this._Padre.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPadreChanging(value);
					this.SendPropertyChanging();
					this._idPadre = value;
					this.SendPropertyChanged("idPadre");
					this.OnidPadreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idMaestro", DbType="Int")]
		public System.Nullable<int> idMaestro
		{
			get
			{
				return this._idMaestro;
			}
			set
			{
				if ((this._idMaestro != value))
				{
					if (this._Maestro.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidMaestroChanging(value);
					this.SendPropertyChanging();
					this._idMaestro = value;
					this.SendPropertyChanged("idMaestro");
					this.OnidMaestroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Alumno_Apellido", Storage="_Alumno", ThisKey="idAlumno", OtherKey="id", IsForeignKey=true)]
		public Alumno Alumno
		{
			get
			{
				return this._Alumno.Entity;
			}
			set
			{
				Alumno previousValue = this._Alumno.Entity;
				if (((previousValue != value) 
							|| (this._Alumno.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Alumno.Entity = null;
						previousValue.Apellido.Remove(this);
					}
					this._Alumno.Entity = value;
					if ((value != null))
					{
						value.Apellido.Add(this);
						this._idAlumno = value.id;
					}
					else
					{
						this._idAlumno = default(Nullable<int>);
					}
					this.SendPropertyChanged("Alumno");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Padre_Apellido", Storage="_Padre", ThisKey="idPadre", OtherKey="id", IsForeignKey=true)]
		public Padre Padre
		{
			get
			{
				return this._Padre.Entity;
			}
			set
			{
				Padre previousValue = this._Padre.Entity;
				if (((previousValue != value) 
							|| (this._Padre.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Padre.Entity = null;
						previousValue.Apellido.Remove(this);
					}
					this._Padre.Entity = value;
					if ((value != null))
					{
						value.Apellido.Add(this);
						this._idPadre = value.id;
					}
					else
					{
						this._idPadre = default(Nullable<int>);
					}
					this.SendPropertyChanged("Padre");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Maestro_Apellido", Storage="_Maestro", ThisKey="idMaestro", OtherKey="id", IsForeignKey=true)]
		public Maestro Maestro
		{
			get
			{
				return this._Maestro.Entity;
			}
			set
			{
				Maestro previousValue = this._Maestro.Entity;
				if (((previousValue != value) 
							|| (this._Maestro.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Maestro.Entity = null;
						previousValue.Apellido.Remove(this);
					}
					this._Maestro.Entity = value;
					if ((value != null))
					{
						value.Apellido.Add(this);
						this._idMaestro = value.id;
					}
					else
					{
						this._idMaestro = default(Nullable<int>);
					}
					this.SendPropertyChanged("Maestro");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Informacion.Estados")]
	public partial class Estados : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Estado;
		
		private EntitySet<Alumno> _Alumno;
		
		private EntitySet<Categoria> _Categoria;
		
		private EntitySet<DetalleAlumno> _DetalleAlumno;
		
		private EntitySet<Instrumento> _Instrumento;
		
		private EntitySet<Padre> _Padre;
		
		private EntitySet<SeccionInstrumento> _SeccionInstrumento;
		
		private EntitySet<Solfeo> _Solfeo;
		
		private EntitySet<SolfeoAlumno> _SolfeoAlumno;
		
		private EntitySet<Matricula> _Matricula;
		
		private EntitySet<Mensualidad> _Mensualidad;
		
		private EntitySet<DetalleMaestro> _DetalleMaestro;
		
		private EntitySet<Maestro> _Maestro;
		
		private EntitySet<HorasTrabajadasDia> _HorasTrabajadasDia;
		
		private EntitySet<PagoMensualMaestro> _PagoMensualMaestro;
		
		private EntitySet<SolfeoMaestro> _SolfeoMaestro;
		
		private EntitySet<Cargo> _Cargo;
		
		private EntitySet<Usuario> _Usuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnEstadoChanging(string value);
    partial void OnEstadoChanged();
    #endregion
		
		public Estados()
		{
			this._Alumno = new EntitySet<Alumno>(new Action<Alumno>(this.attach_Alumno), new Action<Alumno>(this.detach_Alumno));
			this._Categoria = new EntitySet<Categoria>(new Action<Categoria>(this.attach_Categoria), new Action<Categoria>(this.detach_Categoria));
			this._DetalleAlumno = new EntitySet<DetalleAlumno>(new Action<DetalleAlumno>(this.attach_DetalleAlumno), new Action<DetalleAlumno>(this.detach_DetalleAlumno));
			this._Instrumento = new EntitySet<Instrumento>(new Action<Instrumento>(this.attach_Instrumento), new Action<Instrumento>(this.detach_Instrumento));
			this._Padre = new EntitySet<Padre>(new Action<Padre>(this.attach_Padre), new Action<Padre>(this.detach_Padre));
			this._SeccionInstrumento = new EntitySet<SeccionInstrumento>(new Action<SeccionInstrumento>(this.attach_SeccionInstrumento), new Action<SeccionInstrumento>(this.detach_SeccionInstrumento));
			this._Solfeo = new EntitySet<Solfeo>(new Action<Solfeo>(this.attach_Solfeo), new Action<Solfeo>(this.detach_Solfeo));
			this._SolfeoAlumno = new EntitySet<SolfeoAlumno>(new Action<SolfeoAlumno>(this.attach_SolfeoAlumno), new Action<SolfeoAlumno>(this.detach_SolfeoAlumno));
			this._Matricula = new EntitySet<Matricula>(new Action<Matricula>(this.attach_Matricula), new Action<Matricula>(this.detach_Matricula));
			this._Mensualidad = new EntitySet<Mensualidad>(new Action<Mensualidad>(this.attach_Mensualidad), new Action<Mensualidad>(this.detach_Mensualidad));
			this._DetalleMaestro = new EntitySet<DetalleMaestro>(new Action<DetalleMaestro>(this.attach_DetalleMaestro), new Action<DetalleMaestro>(this.detach_DetalleMaestro));
			this._Maestro = new EntitySet<Maestro>(new Action<Maestro>(this.attach_Maestro), new Action<Maestro>(this.detach_Maestro));
			this._HorasTrabajadasDia = new EntitySet<HorasTrabajadasDia>(new Action<HorasTrabajadasDia>(this.attach_HorasTrabajadasDia), new Action<HorasTrabajadasDia>(this.detach_HorasTrabajadasDia));
			this._PagoMensualMaestro = new EntitySet<PagoMensualMaestro>(new Action<PagoMensualMaestro>(this.attach_PagoMensualMaestro), new Action<PagoMensualMaestro>(this.detach_PagoMensualMaestro));
			this._SolfeoMaestro = new EntitySet<SolfeoMaestro>(new Action<SolfeoMaestro>(this.attach_SolfeoMaestro), new Action<SolfeoMaestro>(this.detach_SolfeoMaestro));
			this._Cargo = new EntitySet<Cargo>(new Action<Cargo>(this.attach_Cargo), new Action<Cargo>(this.detach_Cargo));
			this._Usuario = new EntitySet<Usuario>(new Action<Usuario>(this.attach_Usuario), new Action<Usuario>(this.detach_Usuario));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estados_Alumno", Storage="_Alumno", ThisKey="id", OtherKey="Estado")]
		public EntitySet<Alumno> Alumno
		{
			get
			{
				return this._Alumno;
			}
			set
			{
				this._Alumno.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estados_Categoria", Storage="_Categoria", ThisKey="id", OtherKey="Estado")]
		public EntitySet<Categoria> Categoria
		{
			get
			{
				return this._Categoria;
			}
			set
			{
				this._Categoria.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estados_DetalleAlumno", Storage="_DetalleAlumno", ThisKey="id", OtherKey="Estado")]
		public EntitySet<DetalleAlumno> DetalleAlumno
		{
			get
			{
				return this._DetalleAlumno;
			}
			set
			{
				this._DetalleAlumno.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estados_Instrumento", Storage="_Instrumento", ThisKey="id", OtherKey="Estado")]
		public EntitySet<Instrumento> Instrumento
		{
			get
			{
				return this._Instrumento;
			}
			set
			{
				this._Instrumento.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estados_Padre", Storage="_Padre", ThisKey="id", OtherKey="Estado")]
		public EntitySet<Padre> Padre
		{
			get
			{
				return this._Padre;
			}
			set
			{
				this._Padre.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estados_SeccionInstrumento", Storage="_SeccionInstrumento", ThisKey="id", OtherKey="Estado")]
		public EntitySet<SeccionInstrumento> SeccionInstrumento
		{
			get
			{
				return this._SeccionInstrumento;
			}
			set
			{
				this._SeccionInstrumento.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estados_Solfeo", Storage="_Solfeo", ThisKey="id", OtherKey="Estado")]
		public EntitySet<Solfeo> Solfeo
		{
			get
			{
				return this._Solfeo;
			}
			set
			{
				this._Solfeo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estados_SolfeoAlumno", Storage="_SolfeoAlumno", ThisKey="id", OtherKey="Estado")]
		public EntitySet<SolfeoAlumno> SolfeoAlumno
		{
			get
			{
				return this._SolfeoAlumno;
			}
			set
			{
				this._SolfeoAlumno.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estados_Matricula", Storage="_Matricula", ThisKey="id", OtherKey="idEstado")]
		public EntitySet<Matricula> Matricula
		{
			get
			{
				return this._Matricula;
			}
			set
			{
				this._Matricula.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estados_Mensualidad", Storage="_Mensualidad", ThisKey="id", OtherKey="idEstado")]
		public EntitySet<Mensualidad> Mensualidad
		{
			get
			{
				return this._Mensualidad;
			}
			set
			{
				this._Mensualidad.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estados_DetalleMaestro", Storage="_DetalleMaestro", ThisKey="id", OtherKey="Estado")]
		public EntitySet<DetalleMaestro> DetalleMaestro
		{
			get
			{
				return this._DetalleMaestro;
			}
			set
			{
				this._DetalleMaestro.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estados_Maestro", Storage="_Maestro", ThisKey="id", OtherKey="Estado")]
		public EntitySet<Maestro> Maestro
		{
			get
			{
				return this._Maestro;
			}
			set
			{
				this._Maestro.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estados_HorasTrabajadasDia", Storage="_HorasTrabajadasDia", ThisKey="id", OtherKey="Estado")]
		public EntitySet<HorasTrabajadasDia> HorasTrabajadasDia
		{
			get
			{
				return this._HorasTrabajadasDia;
			}
			set
			{
				this._HorasTrabajadasDia.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estados_PagoMensualMaestro", Storage="_PagoMensualMaestro", ThisKey="id", OtherKey="Estado")]
		public EntitySet<PagoMensualMaestro> PagoMensualMaestro
		{
			get
			{
				return this._PagoMensualMaestro;
			}
			set
			{
				this._PagoMensualMaestro.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estados_SolfeoMaestro", Storage="_SolfeoMaestro", ThisKey="id", OtherKey="Estado")]
		public EntitySet<SolfeoMaestro> SolfeoMaestro
		{
			get
			{
				return this._SolfeoMaestro;
			}
			set
			{
				this._SolfeoMaestro.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estados_Cargo", Storage="_Cargo", ThisKey="id", OtherKey="Estado")]
		public EntitySet<Cargo> Cargo
		{
			get
			{
				return this._Cargo;
			}
			set
			{
				this._Cargo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estados_Usuario", Storage="_Usuario", ThisKey="id", OtherKey="Estado")]
		public EntitySet<Usuario> Usuario
		{
			get
			{
				return this._Usuario;
			}
			set
			{
				this._Usuario.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Alumno(Alumno entity)
		{
			this.SendPropertyChanging();
			entity.Estados = this;
		}
		
		private void detach_Alumno(Alumno entity)
		{
			this.SendPropertyChanging();
			entity.Estados = null;
		}
		
		private void attach_Categoria(Categoria entity)
		{
			this.SendPropertyChanging();
			entity.Estados = this;
		}
		
		private void detach_Categoria(Categoria entity)
		{
			this.SendPropertyChanging();
			entity.Estados = null;
		}
		
		private void attach_DetalleAlumno(DetalleAlumno entity)
		{
			this.SendPropertyChanging();
			entity.Estados = this;
		}
		
		private void detach_DetalleAlumno(DetalleAlumno entity)
		{
			this.SendPropertyChanging();
			entity.Estados = null;
		}
		
		private void attach_Instrumento(Instrumento entity)
		{
			this.SendPropertyChanging();
			entity.Estados = this;
		}
		
		private void detach_Instrumento(Instrumento entity)
		{
			this.SendPropertyChanging();
			entity.Estados = null;
		}
		
		private void attach_Padre(Padre entity)
		{
			this.SendPropertyChanging();
			entity.Estados = this;
		}
		
		private void detach_Padre(Padre entity)
		{
			this.SendPropertyChanging();
			entity.Estados = null;
		}
		
		private void attach_SeccionInstrumento(SeccionInstrumento entity)
		{
			this.SendPropertyChanging();
			entity.Estados = this;
		}
		
		private void detach_SeccionInstrumento(SeccionInstrumento entity)
		{
			this.SendPropertyChanging();
			entity.Estados = null;
		}
		
		private void attach_Solfeo(Solfeo entity)
		{
			this.SendPropertyChanging();
			entity.Estados = this;
		}
		
		private void detach_Solfeo(Solfeo entity)
		{
			this.SendPropertyChanging();
			entity.Estados = null;
		}
		
		private void attach_SolfeoAlumno(SolfeoAlumno entity)
		{
			this.SendPropertyChanging();
			entity.Estados = this;
		}
		
		private void detach_SolfeoAlumno(SolfeoAlumno entity)
		{
			this.SendPropertyChanging();
			entity.Estados = null;
		}
		
		private void attach_Matricula(Matricula entity)
		{
			this.SendPropertyChanging();
			entity.Estados = this;
		}
		
		private void detach_Matricula(Matricula entity)
		{
			this.SendPropertyChanging();
			entity.Estados = null;
		}
		
		private void attach_Mensualidad(Mensualidad entity)
		{
			this.SendPropertyChanging();
			entity.Estados = this;
		}
		
		private void detach_Mensualidad(Mensualidad entity)
		{
			this.SendPropertyChanging();
			entity.Estados = null;
		}
		
		private void attach_DetalleMaestro(DetalleMaestro entity)
		{
			this.SendPropertyChanging();
			entity.Estados = this;
		}
		
		private void detach_DetalleMaestro(DetalleMaestro entity)
		{
			this.SendPropertyChanging();
			entity.Estados = null;
		}
		
		private void attach_Maestro(Maestro entity)
		{
			this.SendPropertyChanging();
			entity.Estados = this;
		}
		
		private void detach_Maestro(Maestro entity)
		{
			this.SendPropertyChanging();
			entity.Estados = null;
		}
		
		private void attach_HorasTrabajadasDia(HorasTrabajadasDia entity)
		{
			this.SendPropertyChanging();
			entity.Estados = this;
		}
		
		private void detach_HorasTrabajadasDia(HorasTrabajadasDia entity)
		{
			this.SendPropertyChanging();
			entity.Estados = null;
		}
		
		private void attach_PagoMensualMaestro(PagoMensualMaestro entity)
		{
			this.SendPropertyChanging();
			entity.Estados = this;
		}
		
		private void detach_PagoMensualMaestro(PagoMensualMaestro entity)
		{
			this.SendPropertyChanging();
			entity.Estados = null;
		}
		
		private void attach_SolfeoMaestro(SolfeoMaestro entity)
		{
			this.SendPropertyChanging();
			entity.Estados = this;
		}
		
		private void detach_SolfeoMaestro(SolfeoMaestro entity)
		{
			this.SendPropertyChanging();
			entity.Estados = null;
		}
		
		private void attach_Cargo(Cargo entity)
		{
			this.SendPropertyChanging();
			entity.Estados = this;
		}
		
		private void detach_Cargo(Cargo entity)
		{
			this.SendPropertyChanging();
			entity.Estados = null;
		}
		
		private void attach_Usuario(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Estados = this;
		}
		
		private void detach_Usuario(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Estados = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Informacion.Nombre")]
	public partial class Nombre : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Nombre1;
		
		private System.Nullable<int> _idAlumno;
		
		private System.Nullable<int> _idPadre;
		
		private System.Nullable<int> _idMaestro;
		
		private EntityRef<Alumno> _Alumno;
		
		private EntityRef<Padre> _Padre;
		
		private EntityRef<Maestro> _Maestro;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnNombre1Changing(string value);
    partial void OnNombre1Changed();
    partial void OnidAlumnoChanging(System.Nullable<int> value);
    partial void OnidAlumnoChanged();
    partial void OnidPadreChanging(System.Nullable<int> value);
    partial void OnidPadreChanged();
    partial void OnidMaestroChanging(System.Nullable<int> value);
    partial void OnidMaestroChanged();
    #endregion
		
		public Nombre()
		{
			this._Alumno = default(EntityRef<Alumno>);
			this._Padre = default(EntityRef<Padre>);
			this._Maestro = default(EntityRef<Maestro>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Nombre", Storage="_Nombre1", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nombre1
		{
			get
			{
				return this._Nombre1;
			}
			set
			{
				if ((this._Nombre1 != value))
				{
					this.OnNombre1Changing(value);
					this.SendPropertyChanging();
					this._Nombre1 = value;
					this.SendPropertyChanged("Nombre1");
					this.OnNombre1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idAlumno", DbType="Int")]
		public System.Nullable<int> idAlumno
		{
			get
			{
				return this._idAlumno;
			}
			set
			{
				if ((this._idAlumno != value))
				{
					if (this._Alumno.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidAlumnoChanging(value);
					this.SendPropertyChanging();
					this._idAlumno = value;
					this.SendPropertyChanged("idAlumno");
					this.OnidAlumnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPadre", DbType="Int")]
		public System.Nullable<int> idPadre
		{
			get
			{
				return this._idPadre;
			}
			set
			{
				if ((this._idPadre != value))
				{
					if (this._Padre.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPadreChanging(value);
					this.SendPropertyChanging();
					this._idPadre = value;
					this.SendPropertyChanged("idPadre");
					this.OnidPadreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idMaestro", DbType="Int")]
		public System.Nullable<int> idMaestro
		{
			get
			{
				return this._idMaestro;
			}
			set
			{
				if ((this._idMaestro != value))
				{
					if (this._Maestro.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidMaestroChanging(value);
					this.SendPropertyChanging();
					this._idMaestro = value;
					this.SendPropertyChanged("idMaestro");
					this.OnidMaestroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Alumno_Nombre", Storage="_Alumno", ThisKey="idAlumno", OtherKey="id", IsForeignKey=true)]
		public Alumno Alumno
		{
			get
			{
				return this._Alumno.Entity;
			}
			set
			{
				Alumno previousValue = this._Alumno.Entity;
				if (((previousValue != value) 
							|| (this._Alumno.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Alumno.Entity = null;
						previousValue.Nombre.Remove(this);
					}
					this._Alumno.Entity = value;
					if ((value != null))
					{
						value.Nombre.Add(this);
						this._idAlumno = value.id;
					}
					else
					{
						this._idAlumno = default(Nullable<int>);
					}
					this.SendPropertyChanged("Alumno");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Padre_Nombre", Storage="_Padre", ThisKey="idPadre", OtherKey="id", IsForeignKey=true)]
		public Padre Padre
		{
			get
			{
				return this._Padre.Entity;
			}
			set
			{
				Padre previousValue = this._Padre.Entity;
				if (((previousValue != value) 
							|| (this._Padre.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Padre.Entity = null;
						previousValue.Nombre.Remove(this);
					}
					this._Padre.Entity = value;
					if ((value != null))
					{
						value.Nombre.Add(this);
						this._idPadre = value.id;
					}
					else
					{
						this._idPadre = default(Nullable<int>);
					}
					this.SendPropertyChanged("Padre");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Maestro_Nombre", Storage="_Maestro", ThisKey="idMaestro", OtherKey="id", IsForeignKey=true)]
		public Maestro Maestro
		{
			get
			{
				return this._Maestro.Entity;
			}
			set
			{
				Maestro previousValue = this._Maestro.Entity;
				if (((previousValue != value) 
							|| (this._Maestro.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Maestro.Entity = null;
						previousValue.Nombre.Remove(this);
					}
					this._Maestro.Entity = value;
					if ((value != null))
					{
						value.Nombre.Add(this);
						this._idMaestro = value.id;
					}
					else
					{
						this._idMaestro = default(Nullable<int>);
					}
					this.SendPropertyChanged("Maestro");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Informacion.Telefono")]
	public partial class Telefono : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Telefono1;
		
		private System.Nullable<int> _idAlumno;
		
		private System.Nullable<int> _idPadre;
		
		private System.Nullable<int> _idMaestro;
		
		private EntityRef<Alumno> _Alumno;
		
		private EntityRef<Padre> _Padre;
		
		private EntityRef<Maestro> _Maestro;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnTelefono1Changing(string value);
    partial void OnTelefono1Changed();
    partial void OnidAlumnoChanging(System.Nullable<int> value);
    partial void OnidAlumnoChanged();
    partial void OnidPadreChanging(System.Nullable<int> value);
    partial void OnidPadreChanged();
    partial void OnidMaestroChanging(System.Nullable<int> value);
    partial void OnidMaestroChanged();
    #endregion
		
		public Telefono()
		{
			this._Alumno = default(EntityRef<Alumno>);
			this._Padre = default(EntityRef<Padre>);
			this._Maestro = default(EntityRef<Maestro>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Telefono", Storage="_Telefono1", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Telefono1
		{
			get
			{
				return this._Telefono1;
			}
			set
			{
				if ((this._Telefono1 != value))
				{
					this.OnTelefono1Changing(value);
					this.SendPropertyChanging();
					this._Telefono1 = value;
					this.SendPropertyChanged("Telefono1");
					this.OnTelefono1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idAlumno", DbType="Int")]
		public System.Nullable<int> idAlumno
		{
			get
			{
				return this._idAlumno;
			}
			set
			{
				if ((this._idAlumno != value))
				{
					if (this._Alumno.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidAlumnoChanging(value);
					this.SendPropertyChanging();
					this._idAlumno = value;
					this.SendPropertyChanged("idAlumno");
					this.OnidAlumnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPadre", DbType="Int")]
		public System.Nullable<int> idPadre
		{
			get
			{
				return this._idPadre;
			}
			set
			{
				if ((this._idPadre != value))
				{
					if (this._Padre.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPadreChanging(value);
					this.SendPropertyChanging();
					this._idPadre = value;
					this.SendPropertyChanged("idPadre");
					this.OnidPadreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idMaestro", DbType="Int")]
		public System.Nullable<int> idMaestro
		{
			get
			{
				return this._idMaestro;
			}
			set
			{
				if ((this._idMaestro != value))
				{
					if (this._Maestro.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidMaestroChanging(value);
					this.SendPropertyChanging();
					this._idMaestro = value;
					this.SendPropertyChanged("idMaestro");
					this.OnidMaestroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Alumno_Telefono", Storage="_Alumno", ThisKey="idAlumno", OtherKey="id", IsForeignKey=true)]
		public Alumno Alumno
		{
			get
			{
				return this._Alumno.Entity;
			}
			set
			{
				Alumno previousValue = this._Alumno.Entity;
				if (((previousValue != value) 
							|| (this._Alumno.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Alumno.Entity = null;
						previousValue.Telefono.Remove(this);
					}
					this._Alumno.Entity = value;
					if ((value != null))
					{
						value.Telefono.Add(this);
						this._idAlumno = value.id;
					}
					else
					{
						this._idAlumno = default(Nullable<int>);
					}
					this.SendPropertyChanged("Alumno");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Padre_Telefono", Storage="_Padre", ThisKey="idPadre", OtherKey="id", IsForeignKey=true)]
		public Padre Padre
		{
			get
			{
				return this._Padre.Entity;
			}
			set
			{
				Padre previousValue = this._Padre.Entity;
				if (((previousValue != value) 
							|| (this._Padre.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Padre.Entity = null;
						previousValue.Telefono.Remove(this);
					}
					this._Padre.Entity = value;
					if ((value != null))
					{
						value.Telefono.Add(this);
						this._idPadre = value.id;
					}
					else
					{
						this._idPadre = default(Nullable<int>);
					}
					this.SendPropertyChanged("Padre");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Maestro_Telefono", Storage="_Maestro", ThisKey="idMaestro", OtherKey="id", IsForeignKey=true)]
		public Maestro Maestro
		{
			get
			{
				return this._Maestro.Entity;
			}
			set
			{
				Maestro previousValue = this._Maestro.Entity;
				if (((previousValue != value) 
							|| (this._Maestro.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Maestro.Entity = null;
						previousValue.Telefono.Remove(this);
					}
					this._Maestro.Entity = value;
					if ((value != null))
					{
						value.Telefono.Add(this);
						this._idMaestro = value.id;
					}
					else
					{
						this._idMaestro = default(Nullable<int>);
					}
					this.SendPropertyChanged("Maestro");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="MatriculaMensualidad.Matricula")]
	public partial class Matricula : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idAlumno;
		
		private decimal _Matricula1;
		
		private int _idEstado;
		
		private System.DateTime _Fecha;
		
		private int _Usuario;
		
		private EntityRef<Alumno> _Alumno;
		
		private EntityRef<Estados> _Estados;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidAlumnoChanging(int value);
    partial void OnidAlumnoChanged();
    partial void OnMatricula1Changing(decimal value);
    partial void OnMatricula1Changed();
    partial void OnidEstadoChanging(int value);
    partial void OnidEstadoChanged();
    partial void OnFechaChanging(System.DateTime value);
    partial void OnFechaChanged();
    partial void OnUsuarioChanging(int value);
    partial void OnUsuarioChanged();
    #endregion
		
		public Matricula()
		{
			this._Alumno = default(EntityRef<Alumno>);
			this._Estados = default(EntityRef<Estados>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idAlumno", DbType="Int NOT NULL")]
		public int idAlumno
		{
			get
			{
				return this._idAlumno;
			}
			set
			{
				if ((this._idAlumno != value))
				{
					if (this._Alumno.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidAlumnoChanging(value);
					this.SendPropertyChanging();
					this._idAlumno = value;
					this.SendPropertyChanged("idAlumno");
					this.OnidAlumnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Matricula", Storage="_Matricula1", DbType="Decimal(18,0) NOT NULL")]
		public decimal Matricula1
		{
			get
			{
				return this._Matricula1;
			}
			set
			{
				if ((this._Matricula1 != value))
				{
					this.OnMatricula1Changing(value);
					this.SendPropertyChanging();
					this._Matricula1 = value;
					this.SendPropertyChanged("Matricula1");
					this.OnMatricula1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEstado", DbType="Int NOT NULL")]
		public int idEstado
		{
			get
			{
				return this._idEstado;
			}
			set
			{
				if ((this._idEstado != value))
				{
					if (this._Estados.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidEstadoChanging(value);
					this.SendPropertyChanging();
					this._idEstado = value;
					this.SendPropertyChanged("idEstado");
					this.OnidEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="DateTime NOT NULL")]
		public System.DateTime Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usuario", DbType="Int NOT NULL")]
		public int Usuario
		{
			get
			{
				return this._Usuario;
			}
			set
			{
				if ((this._Usuario != value))
				{
					this.OnUsuarioChanging(value);
					this.SendPropertyChanging();
					this._Usuario = value;
					this.SendPropertyChanged("Usuario");
					this.OnUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Alumno_Matricula", Storage="_Alumno", ThisKey="idAlumno", OtherKey="id", IsForeignKey=true)]
		public Alumno Alumno
		{
			get
			{
				return this._Alumno.Entity;
			}
			set
			{
				Alumno previousValue = this._Alumno.Entity;
				if (((previousValue != value) 
							|| (this._Alumno.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Alumno.Entity = null;
						previousValue.Matricula.Remove(this);
					}
					this._Alumno.Entity = value;
					if ((value != null))
					{
						value.Matricula.Add(this);
						this._idAlumno = value.id;
					}
					else
					{
						this._idAlumno = default(int);
					}
					this.SendPropertyChanged("Alumno");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estados_Matricula", Storage="_Estados", ThisKey="idEstado", OtherKey="id", IsForeignKey=true)]
		public Estados Estados
		{
			get
			{
				return this._Estados.Entity;
			}
			set
			{
				Estados previousValue = this._Estados.Entity;
				if (((previousValue != value) 
							|| (this._Estados.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Estados.Entity = null;
						previousValue.Matricula.Remove(this);
					}
					this._Estados.Entity = value;
					if ((value != null))
					{
						value.Matricula.Add(this);
						this._idEstado = value.id;
					}
					else
					{
						this._idEstado = default(int);
					}
					this.SendPropertyChanged("Estados");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="MatriculaMensualidad.Mensualidad")]
	public partial class Mensualidad : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idAlumno;
		
		private decimal _Mensualidad1;
		
		private int _idEstado;
		
		private System.DateTime _Fecha;
		
		private int _Usuario;
		
		private EntityRef<Alumno> _Alumno;
		
		private EntityRef<Estados> _Estados;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidAlumnoChanging(int value);
    partial void OnidAlumnoChanged();
    partial void OnMensualidad1Changing(decimal value);
    partial void OnMensualidad1Changed();
    partial void OnidEstadoChanging(int value);
    partial void OnidEstadoChanged();
    partial void OnFechaChanging(System.DateTime value);
    partial void OnFechaChanged();
    partial void OnUsuarioChanging(int value);
    partial void OnUsuarioChanged();
    #endregion
		
		public Mensualidad()
		{
			this._Alumno = default(EntityRef<Alumno>);
			this._Estados = default(EntityRef<Estados>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idAlumno", DbType="Int NOT NULL")]
		public int idAlumno
		{
			get
			{
				return this._idAlumno;
			}
			set
			{
				if ((this._idAlumno != value))
				{
					if (this._Alumno.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidAlumnoChanging(value);
					this.SendPropertyChanging();
					this._idAlumno = value;
					this.SendPropertyChanged("idAlumno");
					this.OnidAlumnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Mensualidad", Storage="_Mensualidad1", DbType="Decimal(18,0) NOT NULL")]
		public decimal Mensualidad1
		{
			get
			{
				return this._Mensualidad1;
			}
			set
			{
				if ((this._Mensualidad1 != value))
				{
					this.OnMensualidad1Changing(value);
					this.SendPropertyChanging();
					this._Mensualidad1 = value;
					this.SendPropertyChanged("Mensualidad1");
					this.OnMensualidad1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEstado", DbType="Int NOT NULL")]
		public int idEstado
		{
			get
			{
				return this._idEstado;
			}
			set
			{
				if ((this._idEstado != value))
				{
					if (this._Estados.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidEstadoChanging(value);
					this.SendPropertyChanging();
					this._idEstado = value;
					this.SendPropertyChanged("idEstado");
					this.OnidEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="DateTime NOT NULL")]
		public System.DateTime Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usuario", DbType="Int NOT NULL")]
		public int Usuario
		{
			get
			{
				return this._Usuario;
			}
			set
			{
				if ((this._Usuario != value))
				{
					this.OnUsuarioChanging(value);
					this.SendPropertyChanging();
					this._Usuario = value;
					this.SendPropertyChanged("Usuario");
					this.OnUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Alumno_Mensualidad", Storage="_Alumno", ThisKey="idAlumno", OtherKey="id", IsForeignKey=true)]
		public Alumno Alumno
		{
			get
			{
				return this._Alumno.Entity;
			}
			set
			{
				Alumno previousValue = this._Alumno.Entity;
				if (((previousValue != value) 
							|| (this._Alumno.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Alumno.Entity = null;
						previousValue.Mensualidad.Remove(this);
					}
					this._Alumno.Entity = value;
					if ((value != null))
					{
						value.Mensualidad.Add(this);
						this._idAlumno = value.id;
					}
					else
					{
						this._idAlumno = default(int);
					}
					this.SendPropertyChanged("Alumno");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estados_Mensualidad", Storage="_Estados", ThisKey="idEstado", OtherKey="id", IsForeignKey=true)]
		public Estados Estados
		{
			get
			{
				return this._Estados.Entity;
			}
			set
			{
				Estados previousValue = this._Estados.Entity;
				if (((previousValue != value) 
							|| (this._Estados.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Estados.Entity = null;
						previousValue.Mensualidad.Remove(this);
					}
					this._Estados.Entity = value;
					if ((value != null))
					{
						value.Mensualidad.Add(this);
						this._idEstado = value.id;
					}
					else
					{
						this._idEstado = default(int);
					}
					this.SendPropertyChanged("Estados");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Planilla.DetalleMaestro")]
	public partial class DetalleMaestro : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idMaestro;
		
		private int _idCategoria;
		
		private int _idInstrumento;
		
		private int _idSeccionInstrumento;
		
		private System.DateTime _Fecha;
		
		private int _Usuario;
		
		private int _Estado;
		
		private EntityRef<Categoria> _Categoria;
		
		private EntityRef<Estados> _Estados;
		
		private EntityRef<Instrumento> _Instrumento;
		
		private EntityRef<SeccionInstrumento> _SeccionInstrumento;
		
		private EntityRef<Maestro> _Maestro;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidMaestroChanging(int value);
    partial void OnidMaestroChanged();
    partial void OnidCategoriaChanging(int value);
    partial void OnidCategoriaChanged();
    partial void OnidInstrumentoChanging(int value);
    partial void OnidInstrumentoChanged();
    partial void OnidSeccionInstrumentoChanging(int value);
    partial void OnidSeccionInstrumentoChanged();
    partial void OnFechaChanging(System.DateTime value);
    partial void OnFechaChanged();
    partial void OnUsuarioChanging(int value);
    partial void OnUsuarioChanged();
    partial void OnEstadoChanging(int value);
    partial void OnEstadoChanged();
    #endregion
		
		public DetalleMaestro()
		{
			this._Categoria = default(EntityRef<Categoria>);
			this._Estados = default(EntityRef<Estados>);
			this._Instrumento = default(EntityRef<Instrumento>);
			this._SeccionInstrumento = default(EntityRef<SeccionInstrumento>);
			this._Maestro = default(EntityRef<Maestro>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idMaestro", DbType="Int NOT NULL")]
		public int idMaestro
		{
			get
			{
				return this._idMaestro;
			}
			set
			{
				if ((this._idMaestro != value))
				{
					if (this._Maestro.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidMaestroChanging(value);
					this.SendPropertyChanging();
					this._idMaestro = value;
					this.SendPropertyChanged("idMaestro");
					this.OnidMaestroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCategoria", DbType="Int NOT NULL")]
		public int idCategoria
		{
			get
			{
				return this._idCategoria;
			}
			set
			{
				if ((this._idCategoria != value))
				{
					if (this._Categoria.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCategoriaChanging(value);
					this.SendPropertyChanging();
					this._idCategoria = value;
					this.SendPropertyChanged("idCategoria");
					this.OnidCategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idInstrumento", DbType="Int NOT NULL")]
		public int idInstrumento
		{
			get
			{
				return this._idInstrumento;
			}
			set
			{
				if ((this._idInstrumento != value))
				{
					if (this._Instrumento.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidInstrumentoChanging(value);
					this.SendPropertyChanging();
					this._idInstrumento = value;
					this.SendPropertyChanged("idInstrumento");
					this.OnidInstrumentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idSeccionInstrumento", DbType="Int NOT NULL")]
		public int idSeccionInstrumento
		{
			get
			{
				return this._idSeccionInstrumento;
			}
			set
			{
				if ((this._idSeccionInstrumento != value))
				{
					if (this._SeccionInstrumento.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidSeccionInstrumentoChanging(value);
					this.SendPropertyChanging();
					this._idSeccionInstrumento = value;
					this.SendPropertyChanged("idSeccionInstrumento");
					this.OnidSeccionInstrumentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="DateTime NOT NULL")]
		public System.DateTime Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usuario", DbType="Int NOT NULL")]
		public int Usuario
		{
			get
			{
				return this._Usuario;
			}
			set
			{
				if ((this._Usuario != value))
				{
					this.OnUsuarioChanging(value);
					this.SendPropertyChanging();
					this._Usuario = value;
					this.SendPropertyChanged("Usuario");
					this.OnUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="Int NOT NULL")]
		public int Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					if (this._Estados.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Categoria_DetalleMaestro", Storage="_Categoria", ThisKey="idCategoria", OtherKey="id", IsForeignKey=true)]
		public Categoria Categoria
		{
			get
			{
				return this._Categoria.Entity;
			}
			set
			{
				Categoria previousValue = this._Categoria.Entity;
				if (((previousValue != value) 
							|| (this._Categoria.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Categoria.Entity = null;
						previousValue.DetalleMaestro.Remove(this);
					}
					this._Categoria.Entity = value;
					if ((value != null))
					{
						value.DetalleMaestro.Add(this);
						this._idCategoria = value.id;
					}
					else
					{
						this._idCategoria = default(int);
					}
					this.SendPropertyChanged("Categoria");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estados_DetalleMaestro", Storage="_Estados", ThisKey="Estado", OtherKey="id", IsForeignKey=true)]
		public Estados Estados
		{
			get
			{
				return this._Estados.Entity;
			}
			set
			{
				Estados previousValue = this._Estados.Entity;
				if (((previousValue != value) 
							|| (this._Estados.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Estados.Entity = null;
						previousValue.DetalleMaestro.Remove(this);
					}
					this._Estados.Entity = value;
					if ((value != null))
					{
						value.DetalleMaestro.Add(this);
						this._Estado = value.id;
					}
					else
					{
						this._Estado = default(int);
					}
					this.SendPropertyChanged("Estados");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Instrumento_DetalleMaestro", Storage="_Instrumento", ThisKey="idInstrumento", OtherKey="id", IsForeignKey=true)]
		public Instrumento Instrumento
		{
			get
			{
				return this._Instrumento.Entity;
			}
			set
			{
				Instrumento previousValue = this._Instrumento.Entity;
				if (((previousValue != value) 
							|| (this._Instrumento.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Instrumento.Entity = null;
						previousValue.DetalleMaestro.Remove(this);
					}
					this._Instrumento.Entity = value;
					if ((value != null))
					{
						value.DetalleMaestro.Add(this);
						this._idInstrumento = value.id;
					}
					else
					{
						this._idInstrumento = default(int);
					}
					this.SendPropertyChanged("Instrumento");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SeccionInstrumento_DetalleMaestro", Storage="_SeccionInstrumento", ThisKey="idSeccionInstrumento", OtherKey="id", IsForeignKey=true)]
		public SeccionInstrumento SeccionInstrumento
		{
			get
			{
				return this._SeccionInstrumento.Entity;
			}
			set
			{
				SeccionInstrumento previousValue = this._SeccionInstrumento.Entity;
				if (((previousValue != value) 
							|| (this._SeccionInstrumento.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SeccionInstrumento.Entity = null;
						previousValue.DetalleMaestro.Remove(this);
					}
					this._SeccionInstrumento.Entity = value;
					if ((value != null))
					{
						value.DetalleMaestro.Add(this);
						this._idSeccionInstrumento = value.id;
					}
					else
					{
						this._idSeccionInstrumento = default(int);
					}
					this.SendPropertyChanged("SeccionInstrumento");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Maestro_DetalleMaestro", Storage="_Maestro", ThisKey="idMaestro", OtherKey="id", IsForeignKey=true)]
		public Maestro Maestro
		{
			get
			{
				return this._Maestro.Entity;
			}
			set
			{
				Maestro previousValue = this._Maestro.Entity;
				if (((previousValue != value) 
							|| (this._Maestro.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Maestro.Entity = null;
						previousValue.DetalleMaestro.Remove(this);
					}
					this._Maestro.Entity = value;
					if ((value != null))
					{
						value.DetalleMaestro.Add(this);
						this._idMaestro = value.id;
					}
					else
					{
						this._idMaestro = default(int);
					}
					this.SendPropertyChanged("Maestro");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Planilla.Maestro")]
	public partial class Maestro : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Identidad;
		
		private int _Estado;
		
		private System.DateTime _Fecha;
		
		private int _Usuario;
		
		private EntitySet<Apellido> _Apellido;
		
		private EntitySet<Nombre> _Nombre;
		
		private EntitySet<Telefono> _Telefono;
		
		private EntitySet<DetalleMaestro> _DetalleMaestro;
		
		private EntitySet<HorasTrabajadasDia> _HorasTrabajadasDia;
		
		private EntitySet<HorasTrabajadasDia> _HorasTrabajadasDia1;
		
		private EntitySet<PagoMensualMaestro> _PagoMensualMaestro;
		
		private EntitySet<SolfeoMaestro> _SolfeoMaestro;
		
		private EntitySet<Usuario> _Usuario1;
		
		private EntityRef<Estados> _Estados;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnIdentidadChanging(string value);
    partial void OnIdentidadChanged();
    partial void OnEstadoChanging(int value);
    partial void OnEstadoChanged();
    partial void OnFechaChanging(System.DateTime value);
    partial void OnFechaChanged();
    partial void OnUsuarioChanging(int value);
    partial void OnUsuarioChanged();
    #endregion
		
		public Maestro()
		{
			this._Apellido = new EntitySet<Apellido>(new Action<Apellido>(this.attach_Apellido), new Action<Apellido>(this.detach_Apellido));
			this._Nombre = new EntitySet<Nombre>(new Action<Nombre>(this.attach_Nombre), new Action<Nombre>(this.detach_Nombre));
			this._Telefono = new EntitySet<Telefono>(new Action<Telefono>(this.attach_Telefono), new Action<Telefono>(this.detach_Telefono));
			this._DetalleMaestro = new EntitySet<DetalleMaestro>(new Action<DetalleMaestro>(this.attach_DetalleMaestro), new Action<DetalleMaestro>(this.detach_DetalleMaestro));
			this._HorasTrabajadasDia = new EntitySet<HorasTrabajadasDia>(new Action<HorasTrabajadasDia>(this.attach_HorasTrabajadasDia), new Action<HorasTrabajadasDia>(this.detach_HorasTrabajadasDia));
			this._HorasTrabajadasDia1 = new EntitySet<HorasTrabajadasDia>(new Action<HorasTrabajadasDia>(this.attach_HorasTrabajadasDia1), new Action<HorasTrabajadasDia>(this.detach_HorasTrabajadasDia1));
			this._PagoMensualMaestro = new EntitySet<PagoMensualMaestro>(new Action<PagoMensualMaestro>(this.attach_PagoMensualMaestro), new Action<PagoMensualMaestro>(this.detach_PagoMensualMaestro));
			this._SolfeoMaestro = new EntitySet<SolfeoMaestro>(new Action<SolfeoMaestro>(this.attach_SolfeoMaestro), new Action<SolfeoMaestro>(this.detach_SolfeoMaestro));
			this._Usuario1 = new EntitySet<Usuario>(new Action<Usuario>(this.attach_Usuario1), new Action<Usuario>(this.detach_Usuario1));
			this._Estados = default(EntityRef<Estados>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Identidad", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string Identidad
		{
			get
			{
				return this._Identidad;
			}
			set
			{
				if ((this._Identidad != value))
				{
					this.OnIdentidadChanging(value);
					this.SendPropertyChanging();
					this._Identidad = value;
					this.SendPropertyChanged("Identidad");
					this.OnIdentidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="Int NOT NULL")]
		public int Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					if (this._Estados.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="DateTime NOT NULL")]
		public System.DateTime Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usuario", DbType="Int NOT NULL")]
		public int Usuario
		{
			get
			{
				return this._Usuario;
			}
			set
			{
				if ((this._Usuario != value))
				{
					this.OnUsuarioChanging(value);
					this.SendPropertyChanging();
					this._Usuario = value;
					this.SendPropertyChanged("Usuario");
					this.OnUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Maestro_Apellido", Storage="_Apellido", ThisKey="id", OtherKey="idMaestro")]
		public EntitySet<Apellido> Apellido
		{
			get
			{
				return this._Apellido;
			}
			set
			{
				this._Apellido.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Maestro_Nombre", Storage="_Nombre", ThisKey="id", OtherKey="idMaestro")]
		public EntitySet<Nombre> Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				this._Nombre.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Maestro_Telefono", Storage="_Telefono", ThisKey="id", OtherKey="idMaestro")]
		public EntitySet<Telefono> Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				this._Telefono.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Maestro_DetalleMaestro", Storage="_DetalleMaestro", ThisKey="id", OtherKey="idMaestro")]
		public EntitySet<DetalleMaestro> DetalleMaestro
		{
			get
			{
				return this._DetalleMaestro;
			}
			set
			{
				this._DetalleMaestro.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Maestro_HorasTrabajadasDia", Storage="_HorasTrabajadasDia", ThisKey="id", OtherKey="idMaestro")]
		public EntitySet<HorasTrabajadasDia> HorasTrabajadasDia
		{
			get
			{
				return this._HorasTrabajadasDia;
			}
			set
			{
				this._HorasTrabajadasDia.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Maestro_HorasTrabajadasDia1", Storage="_HorasTrabajadasDia1", ThisKey="id", OtherKey="idMaestro")]
		public EntitySet<HorasTrabajadasDia> HorasTrabajadasDia1
		{
			get
			{
				return this._HorasTrabajadasDia1;
			}
			set
			{
				this._HorasTrabajadasDia1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Maestro_PagoMensualMaestro", Storage="_PagoMensualMaestro", ThisKey="id", OtherKey="idMaestro")]
		public EntitySet<PagoMensualMaestro> PagoMensualMaestro
		{
			get
			{
				return this._PagoMensualMaestro;
			}
			set
			{
				this._PagoMensualMaestro.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Maestro_SolfeoMaestro", Storage="_SolfeoMaestro", ThisKey="id", OtherKey="idMaestro")]
		public EntitySet<SolfeoMaestro> SolfeoMaestro
		{
			get
			{
				return this._SolfeoMaestro;
			}
			set
			{
				this._SolfeoMaestro.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Maestro_Usuario", Storage="_Usuario1", ThisKey="id", OtherKey="idMaestro")]
		public EntitySet<Usuario> Usuario1
		{
			get
			{
				return this._Usuario1;
			}
			set
			{
				this._Usuario1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estados_Maestro", Storage="_Estados", ThisKey="Estado", OtherKey="id", IsForeignKey=true)]
		public Estados Estados
		{
			get
			{
				return this._Estados.Entity;
			}
			set
			{
				Estados previousValue = this._Estados.Entity;
				if (((previousValue != value) 
							|| (this._Estados.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Estados.Entity = null;
						previousValue.Maestro.Remove(this);
					}
					this._Estados.Entity = value;
					if ((value != null))
					{
						value.Maestro.Add(this);
						this._Estado = value.id;
					}
					else
					{
						this._Estado = default(int);
					}
					this.SendPropertyChanged("Estados");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Apellido(Apellido entity)
		{
			this.SendPropertyChanging();
			entity.Maestro = this;
		}
		
		private void detach_Apellido(Apellido entity)
		{
			this.SendPropertyChanging();
			entity.Maestro = null;
		}
		
		private void attach_Nombre(Nombre entity)
		{
			this.SendPropertyChanging();
			entity.Maestro = this;
		}
		
		private void detach_Nombre(Nombre entity)
		{
			this.SendPropertyChanging();
			entity.Maestro = null;
		}
		
		private void attach_Telefono(Telefono entity)
		{
			this.SendPropertyChanging();
			entity.Maestro = this;
		}
		
		private void detach_Telefono(Telefono entity)
		{
			this.SendPropertyChanging();
			entity.Maestro = null;
		}
		
		private void attach_DetalleMaestro(DetalleMaestro entity)
		{
			this.SendPropertyChanging();
			entity.Maestro = this;
		}
		
		private void detach_DetalleMaestro(DetalleMaestro entity)
		{
			this.SendPropertyChanging();
			entity.Maestro = null;
		}
		
		private void attach_HorasTrabajadasDia(HorasTrabajadasDia entity)
		{
			this.SendPropertyChanging();
			entity.Maestro = this;
		}
		
		private void detach_HorasTrabajadasDia(HorasTrabajadasDia entity)
		{
			this.SendPropertyChanging();
			entity.Maestro = null;
		}
		
		private void attach_HorasTrabajadasDia1(HorasTrabajadasDia entity)
		{
			this.SendPropertyChanging();
			entity.Maestro1 = this;
		}
		
		private void detach_HorasTrabajadasDia1(HorasTrabajadasDia entity)
		{
			this.SendPropertyChanging();
			entity.Maestro1 = null;
		}
		
		private void attach_PagoMensualMaestro(PagoMensualMaestro entity)
		{
			this.SendPropertyChanging();
			entity.Maestro = this;
		}
		
		private void detach_PagoMensualMaestro(PagoMensualMaestro entity)
		{
			this.SendPropertyChanging();
			entity.Maestro = null;
		}
		
		private void attach_SolfeoMaestro(SolfeoMaestro entity)
		{
			this.SendPropertyChanging();
			entity.Maestro = this;
		}
		
		private void detach_SolfeoMaestro(SolfeoMaestro entity)
		{
			this.SendPropertyChanging();
			entity.Maestro = null;
		}
		
		private void attach_Usuario1(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Maestro = this;
		}
		
		private void detach_Usuario1(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Maestro = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Planilla.HorasTrabajadasDia")]
	public partial class HorasTrabajadasDia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idMaestro;
		
		private int _Horas;
		
		private System.DateTime _Fecha;
		
		private int _Estado;
		
		private int _Usuario;
		
		private EntityRef<Estados> _Estados;
		
		private EntityRef<Maestro> _Maestro;
		
		private EntityRef<Maestro> _Maestro1;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidMaestroChanging(int value);
    partial void OnidMaestroChanged();
    partial void OnHorasChanging(int value);
    partial void OnHorasChanged();
    partial void OnFechaChanging(System.DateTime value);
    partial void OnFechaChanged();
    partial void OnEstadoChanging(int value);
    partial void OnEstadoChanged();
    partial void OnUsuarioChanging(int value);
    partial void OnUsuarioChanged();
    #endregion
		
		public HorasTrabajadasDia()
		{
			this._Estados = default(EntityRef<Estados>);
			this._Maestro = default(EntityRef<Maestro>);
			this._Maestro1 = default(EntityRef<Maestro>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idMaestro", DbType="Int NOT NULL")]
		public int idMaestro
		{
			get
			{
				return this._idMaestro;
			}
			set
			{
				if ((this._idMaestro != value))
				{
					if ((this._Maestro.HasLoadedOrAssignedValue || this._Maestro1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidMaestroChanging(value);
					this.SendPropertyChanging();
					this._idMaestro = value;
					this.SendPropertyChanged("idMaestro");
					this.OnidMaestroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Horas", DbType="Int NOT NULL")]
		public int Horas
		{
			get
			{
				return this._Horas;
			}
			set
			{
				if ((this._Horas != value))
				{
					this.OnHorasChanging(value);
					this.SendPropertyChanging();
					this._Horas = value;
					this.SendPropertyChanged("Horas");
					this.OnHorasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="DateTime NOT NULL")]
		public System.DateTime Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="Int NOT NULL")]
		public int Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					if (this._Estados.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usuario", DbType="Int NOT NULL")]
		public int Usuario
		{
			get
			{
				return this._Usuario;
			}
			set
			{
				if ((this._Usuario != value))
				{
					this.OnUsuarioChanging(value);
					this.SendPropertyChanging();
					this._Usuario = value;
					this.SendPropertyChanged("Usuario");
					this.OnUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estados_HorasTrabajadasDia", Storage="_Estados", ThisKey="Estado", OtherKey="id", IsForeignKey=true)]
		public Estados Estados
		{
			get
			{
				return this._Estados.Entity;
			}
			set
			{
				Estados previousValue = this._Estados.Entity;
				if (((previousValue != value) 
							|| (this._Estados.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Estados.Entity = null;
						previousValue.HorasTrabajadasDia.Remove(this);
					}
					this._Estados.Entity = value;
					if ((value != null))
					{
						value.HorasTrabajadasDia.Add(this);
						this._Estado = value.id;
					}
					else
					{
						this._Estado = default(int);
					}
					this.SendPropertyChanged("Estados");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Maestro_HorasTrabajadasDia", Storage="_Maestro", ThisKey="idMaestro", OtherKey="id", IsForeignKey=true)]
		public Maestro Maestro
		{
			get
			{
				return this._Maestro.Entity;
			}
			set
			{
				Maestro previousValue = this._Maestro.Entity;
				if (((previousValue != value) 
							|| (this._Maestro.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Maestro.Entity = null;
						previousValue.HorasTrabajadasDia.Remove(this);
					}
					this._Maestro.Entity = value;
					if ((value != null))
					{
						value.HorasTrabajadasDia.Add(this);
						this._idMaestro = value.id;
					}
					else
					{
						this._idMaestro = default(int);
					}
					this.SendPropertyChanged("Maestro");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Maestro_HorasTrabajadasDia1", Storage="_Maestro1", ThisKey="idMaestro", OtherKey="id", IsForeignKey=true)]
		public Maestro Maestro1
		{
			get
			{
				return this._Maestro1.Entity;
			}
			set
			{
				Maestro previousValue = this._Maestro1.Entity;
				if (((previousValue != value) 
							|| (this._Maestro1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Maestro1.Entity = null;
						previousValue.HorasTrabajadasDia1.Remove(this);
					}
					this._Maestro1.Entity = value;
					if ((value != null))
					{
						value.HorasTrabajadasDia1.Add(this);
						this._idMaestro = value.id;
					}
					else
					{
						this._idMaestro = default(int);
					}
					this.SendPropertyChanged("Maestro1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Planilla.PagoMensualMaestro")]
	public partial class PagoMensualMaestro : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idMaestro;
		
		private decimal _Sueldo;
		
		private System.DateTime _Fecha;
		
		private int _Usuario;
		
		private int _Estado;
		
		private EntityRef<Maestro> _Maestro;
		
		private EntityRef<Estados> _Estados;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidMaestroChanging(int value);
    partial void OnidMaestroChanged();
    partial void OnSueldoChanging(decimal value);
    partial void OnSueldoChanged();
    partial void OnFechaChanging(System.DateTime value);
    partial void OnFechaChanged();
    partial void OnUsuarioChanging(int value);
    partial void OnUsuarioChanged();
    partial void OnEstadoChanging(int value);
    partial void OnEstadoChanged();
    #endregion
		
		public PagoMensualMaestro()
		{
			this._Maestro = default(EntityRef<Maestro>);
			this._Estados = default(EntityRef<Estados>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idMaestro", DbType="Int NOT NULL")]
		public int idMaestro
		{
			get
			{
				return this._idMaestro;
			}
			set
			{
				if ((this._idMaestro != value))
				{
					if (this._Maestro.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidMaestroChanging(value);
					this.SendPropertyChanging();
					this._idMaestro = value;
					this.SendPropertyChanged("idMaestro");
					this.OnidMaestroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sueldo", DbType="Decimal(18,0) NOT NULL")]
		public decimal Sueldo
		{
			get
			{
				return this._Sueldo;
			}
			set
			{
				if ((this._Sueldo != value))
				{
					this.OnSueldoChanging(value);
					this.SendPropertyChanging();
					this._Sueldo = value;
					this.SendPropertyChanged("Sueldo");
					this.OnSueldoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="DateTime NOT NULL")]
		public System.DateTime Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usuario", DbType="Int NOT NULL")]
		public int Usuario
		{
			get
			{
				return this._Usuario;
			}
			set
			{
				if ((this._Usuario != value))
				{
					this.OnUsuarioChanging(value);
					this.SendPropertyChanging();
					this._Usuario = value;
					this.SendPropertyChanged("Usuario");
					this.OnUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="Int NOT NULL")]
		public int Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					if (this._Estados.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Maestro_PagoMensualMaestro", Storage="_Maestro", ThisKey="idMaestro", OtherKey="id", IsForeignKey=true)]
		public Maestro Maestro
		{
			get
			{
				return this._Maestro.Entity;
			}
			set
			{
				Maestro previousValue = this._Maestro.Entity;
				if (((previousValue != value) 
							|| (this._Maestro.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Maestro.Entity = null;
						previousValue.PagoMensualMaestro.Remove(this);
					}
					this._Maestro.Entity = value;
					if ((value != null))
					{
						value.PagoMensualMaestro.Add(this);
						this._idMaestro = value.id;
					}
					else
					{
						this._idMaestro = default(int);
					}
					this.SendPropertyChanged("Maestro");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estados_PagoMensualMaestro", Storage="_Estados", ThisKey="Estado", OtherKey="id", IsForeignKey=true)]
		public Estados Estados
		{
			get
			{
				return this._Estados.Entity;
			}
			set
			{
				Estados previousValue = this._Estados.Entity;
				if (((previousValue != value) 
							|| (this._Estados.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Estados.Entity = null;
						previousValue.PagoMensualMaestro.Remove(this);
					}
					this._Estados.Entity = value;
					if ((value != null))
					{
						value.PagoMensualMaestro.Add(this);
						this._Estado = value.id;
					}
					else
					{
						this._Estado = default(int);
					}
					this.SendPropertyChanged("Estados");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Planilla.SolfeoMaestro")]
	public partial class SolfeoMaestro : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idMaestro;
		
		private int _idSolfeo;
		
		private System.DateTime _Fecha;
		
		private int _Usuario;
		
		private int _Estado;
		
		private EntityRef<Estados> _Estados;
		
		private EntityRef<Maestro> _Maestro;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidMaestroChanging(int value);
    partial void OnidMaestroChanged();
    partial void OnidSolfeoChanging(int value);
    partial void OnidSolfeoChanged();
    partial void OnFechaChanging(System.DateTime value);
    partial void OnFechaChanged();
    partial void OnUsuarioChanging(int value);
    partial void OnUsuarioChanged();
    partial void OnEstadoChanging(int value);
    partial void OnEstadoChanged();
    #endregion
		
		public SolfeoMaestro()
		{
			this._Estados = default(EntityRef<Estados>);
			this._Maestro = default(EntityRef<Maestro>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idMaestro", DbType="Int NOT NULL")]
		public int idMaestro
		{
			get
			{
				return this._idMaestro;
			}
			set
			{
				if ((this._idMaestro != value))
				{
					if (this._Maestro.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidMaestroChanging(value);
					this.SendPropertyChanging();
					this._idMaestro = value;
					this.SendPropertyChanged("idMaestro");
					this.OnidMaestroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idSolfeo", DbType="Int NOT NULL")]
		public int idSolfeo
		{
			get
			{
				return this._idSolfeo;
			}
			set
			{
				if ((this._idSolfeo != value))
				{
					this.OnidSolfeoChanging(value);
					this.SendPropertyChanging();
					this._idSolfeo = value;
					this.SendPropertyChanged("idSolfeo");
					this.OnidSolfeoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="DateTime NOT NULL")]
		public System.DateTime Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usuario", DbType="Int NOT NULL")]
		public int Usuario
		{
			get
			{
				return this._Usuario;
			}
			set
			{
				if ((this._Usuario != value))
				{
					this.OnUsuarioChanging(value);
					this.SendPropertyChanging();
					this._Usuario = value;
					this.SendPropertyChanged("Usuario");
					this.OnUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="Int NOT NULL")]
		public int Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					if (this._Estados.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estados_SolfeoMaestro", Storage="_Estados", ThisKey="Estado", OtherKey="id", IsForeignKey=true)]
		public Estados Estados
		{
			get
			{
				return this._Estados.Entity;
			}
			set
			{
				Estados previousValue = this._Estados.Entity;
				if (((previousValue != value) 
							|| (this._Estados.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Estados.Entity = null;
						previousValue.SolfeoMaestro.Remove(this);
					}
					this._Estados.Entity = value;
					if ((value != null))
					{
						value.SolfeoMaestro.Add(this);
						this._Estado = value.id;
					}
					else
					{
						this._Estado = default(int);
					}
					this.SendPropertyChanged("Estados");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Maestro_SolfeoMaestro", Storage="_Maestro", ThisKey="idMaestro", OtherKey="id", IsForeignKey=true)]
		public Maestro Maestro
		{
			get
			{
				return this._Maestro.Entity;
			}
			set
			{
				Maestro previousValue = this._Maestro.Entity;
				if (((previousValue != value) 
							|| (this._Maestro.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Maestro.Entity = null;
						previousValue.SolfeoMaestro.Remove(this);
					}
					this._Maestro.Entity = value;
					if ((value != null))
					{
						value.SolfeoMaestro.Add(this);
						this._idMaestro = value.id;
					}
					else
					{
						this._idMaestro = default(int);
					}
					this.SendPropertyChanged("Maestro");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Seguridad.Cargo")]
	public partial class Cargo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Cargo1;
		
		private int _Estado;
		
		private System.DateTime _Fecha;
		
		private EntitySet<Usuario> _Usuario;
		
		private EntityRef<Estados> _Estados;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnCargo1Changing(string value);
    partial void OnCargo1Changed();
    partial void OnEstadoChanging(int value);
    partial void OnEstadoChanged();
    partial void OnFechaChanging(System.DateTime value);
    partial void OnFechaChanged();
    #endregion
		
		public Cargo()
		{
			this._Usuario = new EntitySet<Usuario>(new Action<Usuario>(this.attach_Usuario), new Action<Usuario>(this.detach_Usuario));
			this._Estados = default(EntityRef<Estados>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Cargo", Storage="_Cargo1", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Cargo1
		{
			get
			{
				return this._Cargo1;
			}
			set
			{
				if ((this._Cargo1 != value))
				{
					this.OnCargo1Changing(value);
					this.SendPropertyChanging();
					this._Cargo1 = value;
					this.SendPropertyChanged("Cargo1");
					this.OnCargo1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="Int NOT NULL")]
		public int Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					if (this._Estados.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="DateTime NOT NULL")]
		public System.DateTime Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cargo_Usuario", Storage="_Usuario", ThisKey="id", OtherKey="idCargo")]
		public EntitySet<Usuario> Usuario
		{
			get
			{
				return this._Usuario;
			}
			set
			{
				this._Usuario.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estados_Cargo", Storage="_Estados", ThisKey="Estado", OtherKey="id", IsForeignKey=true)]
		public Estados Estados
		{
			get
			{
				return this._Estados.Entity;
			}
			set
			{
				Estados previousValue = this._Estados.Entity;
				if (((previousValue != value) 
							|| (this._Estados.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Estados.Entity = null;
						previousValue.Cargo.Remove(this);
					}
					this._Estados.Entity = value;
					if ((value != null))
					{
						value.Cargo.Add(this);
						this._Estado = value.id;
					}
					else
					{
						this._Estado = default(int);
					}
					this.SendPropertyChanged("Estados");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Usuario(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Cargo = this;
		}
		
		private void detach_Usuario(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Cargo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Seguridad.Usuario")]
	public partial class Usuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Usuario1;
		
		private string _Pass;
		
		private System.DateTime _Fecha;
		
		private int _Estado;
		
		private int _idCargo;
		
		private int _idMaestro;
		
		private EntityRef<Maestro> _Maestro;
		
		private EntityRef<Estados> _Estados;
		
		private EntityRef<Cargo> _Cargo;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnUsuario1Changing(string value);
    partial void OnUsuario1Changed();
    partial void OnPassChanging(string value);
    partial void OnPassChanged();
    partial void OnFechaChanging(System.DateTime value);
    partial void OnFechaChanged();
    partial void OnEstadoChanging(int value);
    partial void OnEstadoChanged();
    partial void OnidCargoChanging(int value);
    partial void OnidCargoChanged();
    partial void OnidMaestroChanging(int value);
    partial void OnidMaestroChanged();
    #endregion
		
		public Usuario()
		{
			this._Maestro = default(EntityRef<Maestro>);
			this._Estados = default(EntityRef<Estados>);
			this._Cargo = default(EntityRef<Cargo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Usuario", Storage="_Usuario1", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Usuario1
		{
			get
			{
				return this._Usuario1;
			}
			set
			{
				if ((this._Usuario1 != value))
				{
					this.OnUsuario1Changing(value);
					this.SendPropertyChanging();
					this._Usuario1 = value;
					this.SendPropertyChanged("Usuario1");
					this.OnUsuario1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pass", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Pass
		{
			get
			{
				return this._Pass;
			}
			set
			{
				if ((this._Pass != value))
				{
					this.OnPassChanging(value);
					this.SendPropertyChanging();
					this._Pass = value;
					this.SendPropertyChanged("Pass");
					this.OnPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="DateTime NOT NULL")]
		public System.DateTime Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="Int NOT NULL")]
		public int Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					if (this._Estados.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCargo", DbType="Int NOT NULL")]
		public int idCargo
		{
			get
			{
				return this._idCargo;
			}
			set
			{
				if ((this._idCargo != value))
				{
					if (this._Cargo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCargoChanging(value);
					this.SendPropertyChanging();
					this._idCargo = value;
					this.SendPropertyChanged("idCargo");
					this.OnidCargoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idMaestro", DbType="Int NOT NULL")]
		public int idMaestro
		{
			get
			{
				return this._idMaestro;
			}
			set
			{
				if ((this._idMaestro != value))
				{
					if (this._Maestro.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidMaestroChanging(value);
					this.SendPropertyChanging();
					this._idMaestro = value;
					this.SendPropertyChanged("idMaestro");
					this.OnidMaestroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Maestro_Usuario", Storage="_Maestro", ThisKey="idMaestro", OtherKey="id", IsForeignKey=true)]
		public Maestro Maestro
		{
			get
			{
				return this._Maestro.Entity;
			}
			set
			{
				Maestro previousValue = this._Maestro.Entity;
				if (((previousValue != value) 
							|| (this._Maestro.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Maestro.Entity = null;
						previousValue.Usuario1.Remove(this);
					}
					this._Maestro.Entity = value;
					if ((value != null))
					{
						value.Usuario1.Add(this);
						this._idMaestro = value.id;
					}
					else
					{
						this._idMaestro = default(int);
					}
					this.SendPropertyChanged("Maestro");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estados_Usuario", Storage="_Estados", ThisKey="Estado", OtherKey="id", IsForeignKey=true)]
		public Estados Estados
		{
			get
			{
				return this._Estados.Entity;
			}
			set
			{
				Estados previousValue = this._Estados.Entity;
				if (((previousValue != value) 
							|| (this._Estados.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Estados.Entity = null;
						previousValue.Usuario.Remove(this);
					}
					this._Estados.Entity = value;
					if ((value != null))
					{
						value.Usuario.Add(this);
						this._Estado = value.id;
					}
					else
					{
						this._Estado = default(int);
					}
					this.SendPropertyChanged("Estados");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cargo_Usuario", Storage="_Cargo", ThisKey="idCargo", OtherKey="id", IsForeignKey=true)]
		public Cargo Cargo
		{
			get
			{
				return this._Cargo.Entity;
			}
			set
			{
				Cargo previousValue = this._Cargo.Entity;
				if (((previousValue != value) 
							|| (this._Cargo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cargo.Entity = null;
						previousValue.Usuario.Remove(this);
					}
					this._Cargo.Entity = value;
					if ((value != null))
					{
						value.Usuario.Add(this);
						this._idCargo = value.id;
					}
					else
					{
						this._idCargo = default(int);
					}
					this.SendPropertyChanged("Cargo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
